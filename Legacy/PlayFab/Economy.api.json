{
  "name": "Economy",
  "url": "/Economy",
  "description": "API methods for managing User Generated Content.",
  "apiDescriptionList": [
    "API methods for managing User Generated Content."
  ],
  "AnyInclusiveFlags": [
    "Beta"
  ],
  "datatypes": {
    "AccessPolicy": {
      "name": "AccessPolicy",
      "className": "AccessPolicy",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isenum": true,
      "enumvalues": [
        {
          "name": "Closed"
        },
        {
          "name": "Open"
        }
      ]
    },
    "CatalogItemMetadata": {
      "name": "CatalogItemMetadata",
      "className": "CatalogItemMetadata",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "Contents",
          "description": "The set of contents associated with this item.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "Content",
          "isclass": true,
          "optional": true
        },
        {
          "name": "ContentType",
          "description": "The client-defined type of the item.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "CreationDate",
          "description": "The date and time when this item was created.",
          "jsontype": "String",
          "actualtype": "DateTime",
          "optional": true
        },
        {
          "name": "CreatorEntityKey",
          "description": "The ID of the creator of this catalog item.",
          "jsontype": "Object",
          "actualtype": "EntityKey",
          "isclass": true,
          "optional": true
        },
        {
          "name": "Description",
          "description": "A dictionary of localized descriptions. Key is language code and localized string is the value. The neutral locale is required.",
          "collection": "map",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "DisplayProperties",
          "description": "Game specific properties for display purposes. This is an arbitrary JSON blob.",
          "jsontype": "Object",
          "actualtype": "object",
          "optional": true
        },
        {
          "name": "DisplayVersion",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "ETag",
          "description": "The current ETag value that can be used for optimistic concurrency in the If-None-Match header.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Id",
          "description": "The unique ID of the catalog item.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Images",
          "description": "The images associated with this item. Images can be thumbnails or screenshots.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "Image",
          "isclass": true,
          "optional": true
        },
        {
          "name": "IsHidden",
          "description": "Indicates if the item is hidden",
          "jsontype": "Boolean",
          "actualtype": "Boolean",
          "optional": true
        },
        {
          "name": "LastModifiedDate",
          "description": "The date and time this item was last updated.",
          "jsontype": "String",
          "actualtype": "DateTime",
          "optional": true
        },
        {
          "name": "Platforms",
          "description": "The platforms supported by this item.",
          "collection": "array",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "StartDate",
          "description": "The date of when the item will be available. If not provided then the product will appear immediately.",
          "jsontype": "String",
          "actualtype": "DateTime",
          "optional": true
        },
        {
          "name": "Tags",
          "description": "The list of tags that are associated with this item.",
          "collection": "array",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Title",
          "description": "A dictionary of localized titles. Key is language code and localized string is the value. The neutral locale is required.",
          "collection": "map",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "CatalogSearchRequest": {
      "name": "CatalogSearchRequest",
      "className": "CatalogSearchRequest",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "description": "Only community items that have been published with the Publish Item API will be\n                returned by Search even for the creator. The creator should use the List Items API to\n                view all of their own items.",
      "isRequest": true,
      "properties": [
        {
          "name": "Entity",
          "description": "The entity to perform this action on.",
          "jsontype": "Object",
          "actualtype": "EntityKey",
          "isclass": true,
          "optional": true
        },
        {
          "name": "Filter",
          "description": "An OData filter used to refine the search query.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "OrderBy",
          "description": "An OData orderBy used to order the results of the search query.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Search",
          "description": "The text to search for.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Select",
          "description": "An OData select query option used to augment the search results. If not defined, the default search result metadata will be returned.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Skip",
          "description": "The number of results to skip.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "TitleId",
          "description": "The ID of the title that this catalog item is associated with.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Top",
          "description": "The number of results to retrieve.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        }
      ]
    },
    "CatalogSearchResult": {
      "name": "CatalogSearchResult",
      "className": "CatalogSearchResult",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "Count",
          "description": "The total count of hits for the search query.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": true
        },
        {
          "name": "Items",
          "description": "The paginated set of results for the search query.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "CatalogItemMetadata",
          "isclass": true,
          "optional": true
        }
      ]
    },
    "Content": {
      "name": "Content",
      "className": "Content",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "Id",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "MaxClientVersion",
          "description": "The maximum client version that this content is compatible with.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "MinClientVersion",
          "description": "The minimum client version that this content is compatible with.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Tags",
          "description": "The list of tags that are associated with this content.",
          "collection": "array",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Type",
          "description": "The client-defined type of the content.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Url",
          "description": "The Azure CDN URL for retrieval of the catalog item binary content.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "CreateDraftItemRequest": {
      "name": "CreateDraftItemRequest",
      "className": "CreateDraftItemRequest",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "description": "The item will not be published to the public catalog until the user makes a call to the PublishItem API.",
      "isRequest": true,
      "properties": [
        {
          "name": "Entity",
          "description": "The entity to perform this action on.",
          "jsontype": "Object",
          "actualtype": "EntityKey",
          "isclass": true,
          "optional": true
        },
        {
          "name": "Item",
          "description": "Metadata describing the new catalog item to be created.",
          "jsontype": "Object",
          "actualtype": "CatalogItemMetadata",
          "isclass": true,
          "optional": true
        }
      ]
    },
    "CreateDraftItemResult": {
      "name": "CreateDraftItemResult",
      "className": "CreateDraftItemResult",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "Item",
          "description": "Updated metadata describing the catalog item just created.",
          "jsontype": "Object",
          "actualtype": "CatalogItemMetadata",
          "isclass": true,
          "optional": true
        }
      ]
    },
    "CreateUploadUrlsRequest": {
      "name": "CreateUploadUrlsRequest",
      "className": "CreateUploadUrlsRequest",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "description": "Upload URLs point to Azure Blobs; clients must follow the Microsoft Azure Storage Blob Service REST\n                API pattern for uploading content. The response contains upload URLs and IDs for each file. The IDs and URLs\n                returned must be added to the item metadata and commited using the CreateDraftItem or UpdateDraftItem Item APIs.",
      "isRequest": true,
      "properties": [
        {
          "name": "Entity",
          "description": "The entity to perform this action on.",
          "jsontype": "Object",
          "actualtype": "EntityKey",
          "isclass": true,
          "optional": true
        },
        {
          "name": "Files",
          "description": "Description of the files to be uploaded by the client.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "UploadInfo",
          "isclass": true,
          "optional": true
        }
      ]
    },
    "CreateUploadUrlsResult": {
      "name": "CreateUploadUrlsResult",
      "className": "CreateUploadUrlsResult",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "UploadUrls",
          "description": "Urls and metadata for the files to be uploaded by the client.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "UploadUrlMetadata",
          "isclass": true,
          "optional": true
        }
      ]
    },
    "DeleteItemRequest": {
      "name": "DeleteItemRequest",
      "className": "DeleteItemRequest",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "Entity",
          "description": "The entity to perform this action on.",
          "jsontype": "Object",
          "actualtype": "EntityKey",
          "isclass": true,
          "optional": true
        },
        {
          "name": "ItemId",
          "description": "ID of the catalog item to delete.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "DeleteItemResult": {
      "name": "DeleteItemResult",
      "className": "DeleteItemResult",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": []
    },
    "EntityKey": {
      "name": "EntityKey",
      "className": "EntityKey",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "description": "Combined entity type and ID structure which uniquely identifies a single entity.",
      "properties": [
        {
          "name": "Id",
          "description": "Unique ID of the entity.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Type",
          "description": "Entity type. See https://api.playfab.com/docs/tutorials/entities/entitytypes",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "TypeString",
          "description": "Alternate name for Type.",
          "deprecation": {
            "ProposedAfter": "6/1/2018",
            "DeprecatedAfter": "7/1/2018",
            "ObsoleteAfter": "8/1/2018",
            "ReplacedBy": "Type"
          },
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "GetConfigRequest": {
      "name": "GetConfigRequest",
      "className": "GetConfigRequest",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "Entity",
          "description": "The entity to perform this action on.",
          "jsontype": "Object",
          "actualtype": "EntityKey",
          "isclass": true,
          "optional": true
        }
      ]
    },
    "GetConfigResult": {
      "name": "GetConfigResult",
      "className": "GetConfigResult",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "Config",
          "jsontype": "Object",
          "actualtype": "UserGeneratedContentConfig",
          "isclass": true,
          "optional": true
        }
      ]
    },
    "GetDraftItemRequest": {
      "name": "GetDraftItemRequest",
      "className": "GetDraftItemRequest",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "Entity",
          "description": "The entity to perform this action on.",
          "jsontype": "Object",
          "actualtype": "EntityKey",
          "isclass": true,
          "optional": true
        },
        {
          "name": "ItemId",
          "description": "ID of the catalog item to retrieve from the working catalog.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "GetDraftItemResult": {
      "name": "GetDraftItemResult",
      "className": "GetDraftItemResult",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "Item",
          "description": "Full metadata of the catalog item requested.",
          "jsontype": "Object",
          "actualtype": "CatalogItemMetadata",
          "isclass": true,
          "optional": true
        }
      ]
    },
    "GetDraftItemsRequest": {
      "name": "GetDraftItemsRequest",
      "className": "GetDraftItemsRequest",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "ContinuationToken",
          "description": "An opaque token used to retrieve the next page of items created by the caller, if any are available. Should be null on initial request.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Count",
          "description": "Number of items to retrieve. Maximum page size is 10.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "Entity",
          "description": "The entity to perform this action on.",
          "jsontype": "Object",
          "actualtype": "EntityKey",
          "isclass": true,
          "optional": true
        }
      ]
    },
    "GetDraftItemsResult": {
      "name": "GetDraftItemsResult",
      "className": "GetDraftItemsResult",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "ContinuationToken",
          "description": "An opaque token used to retrieve the next page of items, if any are available.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Count",
          "description": "The total number of items created by the caller.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "Items",
          "description": "A set of items created by the caller.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "CatalogItemMetadata",
          "isclass": true,
          "optional": true
        }
      ]
    },
    "GetPublishedItemRequest": {
      "name": "GetPublishedItemRequest",
      "className": "GetPublishedItemRequest",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "Entity",
          "description": "The entity to perform this action on.",
          "jsontype": "Object",
          "actualtype": "EntityKey",
          "isclass": true,
          "optional": true
        },
        {
          "name": "ItemId",
          "description": "ID of the catalog item to retrieve from the working catalog.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "GetPublishedItemResult": {
      "name": "GetPublishedItemResult",
      "className": "GetPublishedItemResult",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "Item",
          "description": "Full metadata of the catalog item requested.",
          "jsontype": "Object",
          "actualtype": "CatalogItemMetadata",
          "isclass": true,
          "optional": true
        }
      ]
    },
    "Image": {
      "name": "Image",
      "className": "Image",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "Id",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Locales",
          "description": "The optional list of locales that are supported by this image.",
          "collection": "array",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Tag",
          "description": "The client-defined tag associated with this image.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Type",
          "description": "The client-defined type of this image.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Url",
          "description": "The URL for retrieval of the image.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "PublishItemRequest": {
      "name": "PublishItemRequest",
      "className": "PublishItemRequest",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "description": "The call kicks off a workflow to publish the item to the public catalog.\n                The Publish Status API should be used to monitor the publish job.",
      "isRequest": true,
      "properties": [
        {
          "name": "Entity",
          "description": "The entity to perform this action on.",
          "jsontype": "Object",
          "actualtype": "EntityKey",
          "isclass": true,
          "optional": true
        },
        {
          "name": "ETag",
          "description": "ETag of the catalog item to published from the working catalog to the public catalog. Used for optimistic concurrency. If the provided ETag does not match the ETag in the current working catalog, the request will be reject. If not provided, the current version of the document in the working catalog will be published.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "ItemId",
          "description": "ID of the catalog item to publish from the working catalog to the public catalog.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "PublishItemResult": {
      "name": "PublishItemResult",
      "className": "PublishItemResult",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": []
    },
    "PublishResult": {
      "name": "PublishResult",
      "className": "PublishResult",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isenum": true,
      "enumvalues": [
        {
          "name": "Unknown"
        },
        {
          "name": "Pending"
        },
        {
          "name": "Succeeded"
        },
        {
          "name": "Failed"
        },
        {
          "name": "Canceled"
        }
      ]
    },
    "PublishStatusRequest": {
      "name": "PublishStatusRequest",
      "className": "PublishStatusRequest",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "Entity",
          "description": "The entity to perform this action on.",
          "jsontype": "Object",
          "actualtype": "EntityKey",
          "isclass": true,
          "optional": true
        },
        {
          "name": "ItemId",
          "description": "ID of the catalog item to publish from the working catalog to the public catalog.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "PublishStatusResult": {
      "name": "PublishStatusResult",
      "className": "PublishStatusResult",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "Result",
          "description": "High level state of the publish.",
          "jsontype": "String",
          "actualtype": "PublishResult",
          "isenum": true,
          "optional": true
        },
        {
          "name": "StatusMessage",
          "description": "Descriptive message about the current status of the publish.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "SetConfigRequest": {
      "name": "SetConfigRequest",
      "className": "SetConfigRequest",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "Config",
          "jsontype": "Object",
          "actualtype": "UserGeneratedContentConfig",
          "isclass": true,
          "optional": true
        },
        {
          "name": "Entity",
          "description": "The entity to perform this action on.",
          "jsontype": "Object",
          "actualtype": "EntityKey",
          "isclass": true,
          "optional": true
        }
      ]
    },
    "SetConfigResult": {
      "name": "SetConfigResult",
      "className": "SetConfigResult",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": []
    },
    "UpdateDraftItemRequest": {
      "name": "UpdateDraftItemRequest",
      "className": "UpdateDraftItemRequest",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isRequest": true,
      "properties": [
        {
          "name": "Entity",
          "description": "The entity to perform this action on.",
          "jsontype": "Object",
          "actualtype": "EntityKey",
          "isclass": true,
          "optional": true
        },
        {
          "name": "Item",
          "description": "Updated metadata describing the catalog item to be updated.",
          "jsontype": "Object",
          "actualtype": "CatalogItemMetadata",
          "isclass": true,
          "optional": true
        }
      ]
    },
    "UpdateDraftItemResult": {
      "name": "UpdateDraftItemResult",
      "className": "UpdateDraftItemResult",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isResult": true,
      "properties": [
        {
          "name": "Item",
          "description": "Updated metadata describing the catalog item just updated.",
          "jsontype": "Object",
          "actualtype": "CatalogItemMetadata",
          "isclass": true,
          "optional": true
        }
      ]
    },
    "UploadInfo": {
      "name": "UploadInfo",
      "className": "UploadInfo",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "FileName",
          "description": "Name of the file to be uploaded.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "FileSize",
          "description": "Size of the file to be uploaded, in bytes.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        }
      ]
    },
    "UploadUrlMetadata": {
      "name": "UploadUrlMetadata",
      "className": "UploadUrlMetadata",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "FileName",
          "description": "Name of the file for which this upload url was requested.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Id",
          "description": "Unique identifier for the binary content to be uploaded to the target url.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Url",
          "description": "Url for the binary content to be uploaded to.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "UserGeneratedContentConfig": {
      "name": "UserGeneratedContentConfig",
      "className": "UserGeneratedContentConfig",
      "classNameSpace": "PlayFab.Economy.Models",
      "assembly": "PlayFab.Economy.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "ContentTypes",
          "description": "The set of valid content types.",
          "collection": "array",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "CreatorAccessPolicy",
          "description": "The policy defining who is allowed to create and manage UGC.",
          "jsontype": "String",
          "actualtype": "AccessPolicy",
          "isenum": true,
          "optional": true
        },
        {
          "name": "Tags",
          "description": "The set of valid tags.",
          "collection": "array",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    }
  },
  "subgroups": [
    {
      "name": "UserGeneratedContent",
      "methods": [
        "CreateDraftItem",
        "CreateUploadUrls",
        "DeleteItem",
        "GetConfig",
        "GetDraftItem",
        "GetDraftItems",
        "GetPublishedItem",
        "GetPublishStatus",
        "PublishItem",
        "Search",
        "SetConfig",
        "UpdateDraftItem"
      ]
    }
  ],
  "calls": [
    {
      "name": "CreateDraftItem",
      "summary": "Creates a new community catalog item in the working catalog using provided metadata.",
      "requestDetails": "The item will not be published to the public catalog until the user makes a call to the PublishItem API.",
      "subgroup": "UserGeneratedContent",
      "titleTiers": null,
      "url": "/UserGeneratedContent/CreateDraftItem",
      "auth": "EntityToken",
      "method": "POST",
      "request": "CreateDraftItemRequest",
      "requestExample": "{\r\n  \"Item\": {\r\n    \"Title\": {\r\n      \"neutral\": \"Neutral title\",\r\n      \"en-US\": \"US English title\"\r\n    },\r\n    \"Description\": {\r\n      \"neutral\": \"Neutral description\",\r\n      \"en-US\": \"US English description\"\r\n    },\r\n    \"ContentType\": \"example catalog item\",\r\n    \"IsHidden\": false,\r\n    \"Platforms\": [\r\n      \"android\",\r\n      \"xboxone\",\r\n      \"ios\"\r\n    ],\r\n    \"Tags\": [\r\n      \"pirates\",\r\n      \"holiday\"\r\n    ],\r\n    \"DisplayVersion\": \"1.0.0\",\r\n    \"Contents\": [\r\n      {\r\n        \"Id\": \"00000000-0000-0000-0000-000000000001\",\r\n        \"Url\": \"https://endpoint.blob.core.windows.net/some-identifier-private/00000000-0000-0000-0000-000000000001/textures.zip\",\r\n        \"MaxClientVersion\": \"2.4.1\",\r\n        \"MinClientVersion\": \"2.0.0\",\r\n        \"Tags\": [\r\n          \"pirate\",\r\n          \"desert\"\r\n        ],\r\n        \"Type\": \"textures\"\r\n      }\r\n    ],\r\n    \"Images\": [\r\n      {\r\n        \"Id\": \"00000000-0000-0000-0000-000000000003\",\r\n        \"Tag\": \"splashscreen\",\r\n        \"Type\": \"thumbnail\",\r\n        \"Url\": \"https://endpoint.blob.core.windows.net/some-identifier-private/00000000-0000-0000-0000-000000000003/splashscreen_thumb.jpg\"\r\n      }\r\n    ],\r\n    \"DisplayProperties\": {\r\n      \"mapDetails\": {\r\n        \"mapType\": \"desertIsland\",\r\n        \"gameMode\": \"capture\",\r\n        \"maxPlayers\": 16\r\n      },\r\n      \"averageMatchLengthInSeconds\": 947\r\n    },\r\n    \"ETag\": \"opaqueString\"\r\n  }\r\n}",
      "result": "CreateDraftItemResult",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"Item\": {\r\n      \"Id\": \"dddddddd-dddd-dddd-dddd-dddddddddddd\",\r\n      \"Title\": {\r\n        \"neutral\": \"Neutral title\",\r\n        \"en-US\": \"US English title\"\r\n      },\r\n      \"Description\": {\r\n        \"neutral\": \"Neutral description\",\r\n        \"en-US\": \"US English description\"\r\n      },\r\n      \"ContentType\": \"example catalog item\",\r\n      \"CreatorEntityKey\": {\r\n        \"Id\": \"someId\",\r\n        \"Type\": \"title_player_account\",\r\n        \"TypeString\": \"title_player_account\"\r\n      },\r\n      \"IsHidden\": false,\r\n      \"Platforms\": [\r\n        \"android\",\r\n        \"xboxone\",\r\n        \"ios\"\r\n      ],\r\n      \"Tags\": [\r\n        \"pirates\",\r\n        \"holiday\"\r\n      ],\r\n      \"DisplayVersion\": \"1.0.0\",\r\n      \"CreationDate\": \"2018-08-17T22:32:10.472Z\",\r\n      \"LastModifiedDate\": \"2018-08-17T22:32:31.911Z\",\r\n      \"Contents\": [\r\n        {\r\n          \"Id\": \"00000000-0000-0000-0000-000000000001\",\r\n          \"Url\": \"https://endpoint.blob.core.windows.net/some-identifier-private/00000000-0000-0000-0000-000000000001/textures.zip\",\r\n          \"MaxClientVersion\": \"2.4.1\",\r\n          \"MinClientVersion\": \"2.0.0\",\r\n          \"Tags\": [\r\n            \"pirate\",\r\n            \"desert\"\r\n          ],\r\n          \"Type\": \"textures\"\r\n        }\r\n      ],\r\n      \"Images\": [\r\n        {\r\n          \"Id\": \"00000000-0000-0000-0000-000000000003\",\r\n          \"Tag\": \"splashscreen\",\r\n          \"Type\": \"thumbnail\",\r\n          \"Url\": \"https://endpoint.blob.core.windows.net/some-identifier-private/00000000-0000-0000-0000-000000000003/splashscreen_thumb.jpg\"\r\n        }\r\n      ],\r\n      \"DisplayProperties\": {\r\n        \"mapDetails\": {\r\n          \"mapType\": \"desertIsland\",\r\n          \"gameMode\": \"capture\",\r\n          \"maxPlayers\": 16\r\n        },\r\n        \"averageMatchLengthInSeconds\": 947\r\n      },\r\n      \"ETag\": \"opaqueString\"\r\n    }\r\n  }\r\n}",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "CatalogClientIdentityInvalid",
        "CatalogItemMetadataInvalid",
        "CatalogPlayerIdMissing",
        "CatalogTitleIdMissing"
      ]
    },
    {
      "name": "CreateUploadUrls",
      "summary": "Creates one or more upload URLs which can be used by the client to upload raw mod file data.",
      "requestDetails": "Upload URLs point to Azure Blobs; clients must follow the Microsoft Azure Storage Blob Service REST API pattern for uploading content. The response contains upload URLs and IDs for each file. The IDs and URLs returned must be added to the item metadata and commited using the CreateDraftItem or UpdateDraftItem Item APIs.",
      "subgroup": "UserGeneratedContent",
      "titleTiers": null,
      "url": "/UserGeneratedContent/CreateUploadUrls",
      "auth": "EntityToken",
      "method": "POST",
      "request": "CreateUploadUrlsRequest",
      "requestExample": "{\r\n  \"Files\": [\r\n    {\r\n      \"FileName\": \"textures.zip\",\r\n      \"FileSize\": 100\r\n    },\r\n    {\r\n      \"FileName\": \"sprites.png\",\r\n      \"FileSize\": 200\r\n    }\r\n  ]\r\n}",
      "result": "CreateUploadUrlsResult",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"UploadUrls\": [\r\n      {\r\n        \"Id\": \"11111111-1111-1111-1111-111111111111\",\r\n        \"Url\": \"https://endpoint.blob.core.windows.net/some-identifier-private/11111111-1111-1111-1111-111111111111/textures.zip\",\r\n        \"FileName\": \"textures.zip\"\r\n      },\r\n      {\r\n        \"Id\": \"22222222-2222-2222-2222-222222222222\",\r\n        \"Url\": \"https://endpoint.blob.core.windows.net/some-identifier-private/22222222-2222-2222-2222-222222222222/sprites.png\",\r\n        \"FileName\": \"sprites.png\"\r\n      }\r\n    ]\r\n  }\r\n}",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "CatalogClientIdentityInvalid",
        "CatalogOneOrMoreFilesInvalid",
        "CatalogPlayerIdMissing",
        "CatalogTitleIdMissing"
      ]
    },
    {
      "name": "DeleteItem",
      "summary": "Removes an item from working catalog and all published versions from the public catalog.",
      "subgroup": "UserGeneratedContent",
      "titleTiers": null,
      "url": "/UserGeneratedContent/DeleteItem",
      "auth": "EntityToken",
      "method": "POST",
      "request": "DeleteItemRequest",
      "requestExample": "{\r\n  \"ItemId\": \"dddddddd-dddd-dddd-dddd-dddddddddddd\"\r\n}",
      "result": "DeleteItemResult",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {}\r\n}",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "CatalogClientIdentityInvalid",
        "CatalogItemIdInvalid",
        "CatalogPlayerIdMissing",
        "CatalogTitleIdMissing"
      ]
    },
    {
      "name": "GetConfig",
      "summary": "Gets the configuration for the user generated content catalog.",
      "subgroup": "UserGeneratedContent",
      "titleTiers": null,
      "url": "/UserGeneratedContent/GetConfig",
      "auth": "EntityToken",
      "method": "POST",
      "request": "GetConfigRequest",
      "requestExample": "{}",
      "result": "GetConfigResult",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"Config\": {\r\n      \"CreatorAccessPolicy\": \"Open\",\r\n      \"ContentTypes\": [\r\n        \"map\",\r\n        \"skin\"\r\n      ],\r\n      \"Tags\": [\r\n        \"sword\",\r\n        \"shield\"\r\n      ]\r\n    }\r\n  }\r\n}",
      "AnyInclusiveFlags": [
        "Beta"
      ]
    },
    {
      "name": "GetDraftItem",
      "summary": "Retrieves an item from the working catalog. This item represents the current working state of the community item.",
      "subgroup": "UserGeneratedContent",
      "titleTiers": null,
      "url": "/UserGeneratedContent/GetDraftItem",
      "auth": "EntityToken",
      "method": "POST",
      "request": "GetDraftItemRequest",
      "requestExample": "{\r\n  \"ItemId\": \"dddddddd-dddd-dddd-dddd-dddddddddddd\"\r\n}",
      "result": "GetDraftItemResult",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"Item\": {}\r\n  }\r\n}",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "CatalogClientIdentityInvalid",
        "CatalogItemIdInvalid",
        "CatalogPlayerIdMissing",
        "CatalogTitleIdMissing"
      ]
    },
    {
      "name": "GetDraftItems",
      "summary": "Retrieves a paginated list of the items created by a user.",
      "subgroup": "UserGeneratedContent",
      "titleTiers": null,
      "url": "/UserGeneratedContent/GetDraftItems",
      "auth": "EntityToken",
      "method": "POST",
      "request": "GetDraftItemsRequest",
      "requestExample": "{\r\n  \"Count\": 10\r\n}",
      "result": "GetDraftItemsResult",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"ContinuationToken\": \"+RID:IQkbAIvkRQD9oQIAAAAAAA==#RT:1#TRC:10#FPC:AgEKHAoKAPEhAOAhQP8DWIAMAgB8rRACAJeAHAIA0r0=\",\r\n    \"Count\": 3,\r\n    \"Items\": [\r\n      {},\r\n      {},\r\n      {}\r\n    ]\r\n  }\r\n}",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "CatalogClientIdentityInvalid",
        "CatalogPlayerIdMissing",
        "CatalogTitleIdMissing"
      ]
    },
    {
      "name": "GetPublishedItem",
      "summary": "Retrieves an item from the public catalog.",
      "subgroup": "UserGeneratedContent",
      "titleTiers": null,
      "url": "/UserGeneratedContent/GetPublishedItem",
      "auth": "EntityToken",
      "method": "POST",
      "request": "GetPublishedItemRequest",
      "requestExample": "{\r\n  \"ItemId\": \"dddddddd-dddd-dddd-dddd-dddddddddddd\"\r\n}",
      "result": "GetPublishedItemResult",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"Item\": {}\r\n  }\r\n}",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "CatalogItemIdInvalid",
        "CatalogTitleIdMissing"
      ]
    },
    {
      "name": "GetPublishStatus",
      "summary": "Gets the status of a publish of an item.",
      "subgroup": "UserGeneratedContent",
      "titleTiers": null,
      "url": "/UserGeneratedContent/GetPublishStatus",
      "auth": "EntityToken",
      "method": "POST",
      "request": "PublishStatusRequest",
      "requestExample": "{\r\n  \"ItemId\": \"dddddddd-dddd-dddd-dddd-dddddddddddd\"\r\n}",
      "result": "PublishStatusResult",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"Result\": \"Pending\",\r\n    \"StatusMessage\": \"scanning images\"\r\n  }\r\n}",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "CatalogClientIdentityInvalid",
        "CatalogItemIdInvalid",
        "CatalogPlayerIdMissing",
        "CatalogTitleIdMissing"
      ]
    },
    {
      "name": "PublishItem",
      "summary": "Initiates a publish of a item from the working catalog to the public catalog.",
      "requestDetails": "The call kicks off a workflow to publish the item to the public catalog. The Publish Status API should be used to monitor the publish job.",
      "subgroup": "UserGeneratedContent",
      "titleTiers": null,
      "url": "/UserGeneratedContent/PublishItem",
      "auth": "EntityToken",
      "method": "POST",
      "request": "PublishItemRequest",
      "requestExample": "{\r\n  \"ItemId\": \"dddddddd-dddd-dddd-dddd-dddddddddddd\",\r\n  \"ETag\": \"someOpaqueString\"\r\n}",
      "result": "PublishItemResult",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {}\r\n}",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "CatalogClientIdentityInvalid",
        "CatalogItemIdInvalid",
        "CatalogPlayerIdMissing",
        "CatalogTitleIdMissing"
      ]
    },
    {
      "name": "Search",
      "summary": "Execute a search against the public catalog using the provided search parameters and returns a set of paginated results.",
      "requestDetails": "Only community items that have been published with the Publish Item API will be returned by Search even for the creator. The creator should use the List Items API to view all of their own items.",
      "subgroup": "UserGeneratedContent",
      "titleTiers": null,
      "url": "/UserGeneratedContent/Search",
      "auth": "EntityToken",
      "method": "POST",
      "request": "CatalogSearchRequest",
      "requestExample": "{\r\n  \"Search\": \"Pirates\",\r\n  \"Filter\": \"tags/any(t:t eq 'desert') and contentType eq 'map'\",\r\n  \"OrderBy\": \"lastModifiedDate asc\",\r\n  \"Skip\": 0,\r\n  \"Top\": 10,\r\n  \"Select\": \"contents,images\"\r\n}",
      "result": "CatalogSearchResult",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"Count\": 261,\r\n    \"Items\": []\r\n  }\r\n}",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "CatalogSearchParameterInvalid",
        "CatalogTitleIdMissing"
      ]
    },
    {
      "name": "SetConfig",
      "summary": "Gets the configuration for the user generated content catalog.",
      "subgroup": "UserGeneratedContent",
      "titleTiers": null,
      "url": "/UserGeneratedContent/SetConfig",
      "auth": "EntityToken",
      "method": "POST",
      "request": "SetConfigRequest",
      "requestExample": "{\r\n  \"Config\": {\r\n    \"CreatorAccessPolicy\": \"Open\",\r\n    \"ContentTypes\": [\r\n      \"map\",\r\n      \"skin\"\r\n    ],\r\n    \"Tags\": [\r\n      \"sword\",\r\n      \"shield\"\r\n    ]\r\n  }\r\n}",
      "result": "SetConfigResult",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {}\r\n}",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "CatalogConfigContentTypeTooLong",
        "CatalogConfigMissing",
        "CatalogConfigTagTooLong",
        "CatalogConfigTooManyContentTypes",
        "CatalogConfigTooManyTags",
        "NotAuthorized"
      ]
    },
    {
      "name": "UpdateDraftItem",
      "summary": "Update the metadata for an item in the working catalog.",
      "subgroup": "UserGeneratedContent",
      "titleTiers": null,
      "url": "/UserGeneratedContent/UpdateDraftItem",
      "auth": "EntityToken",
      "method": "POST",
      "request": "UpdateDraftItemRequest",
      "requestExample": "{}",
      "result": "UpdateDraftItemResult",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"Item\": {}\r\n  }\r\n}",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "CatalogClientIdentityInvalid",
        "CatalogItemMetadataInvalid",
        "CatalogPlayerIdMissing",
        "CatalogTitleIdMissing"
      ]
    }
  ],
  "errors": {
    "Success": {
      "id": 0,
      "name": "Success"
    },
    "UnkownError": {
      "id": 500,
      "name": "UnkownError"
    },
    "InvalidParams": {
      "id": 1000,
      "name": "InvalidParams"
    },
    "AccountNotFound": {
      "id": 1001,
      "name": "AccountNotFound"
    },
    "AccountBanned": {
      "id": 1002,
      "name": "AccountBanned"
    },
    "InvalidUsernameOrPassword": {
      "id": 1003,
      "name": "InvalidUsernameOrPassword"
    },
    "InvalidTitleId": {
      "id": 1004,
      "name": "InvalidTitleId"
    },
    "InvalidEmailAddress": {
      "id": 1005,
      "name": "InvalidEmailAddress"
    },
    "EmailAddressNotAvailable": {
      "id": 1006,
      "name": "EmailAddressNotAvailable"
    },
    "InvalidUsername": {
      "id": 1007,
      "name": "InvalidUsername"
    },
    "InvalidPassword": {
      "id": 1008,
      "name": "InvalidPassword"
    },
    "UsernameNotAvailable": {
      "id": 1009,
      "name": "UsernameNotAvailable"
    },
    "InvalidSteamTicket": {
      "id": 1010,
      "name": "InvalidSteamTicket"
    },
    "AccountAlreadyLinked": {
      "id": 1011,
      "name": "AccountAlreadyLinked"
    },
    "LinkedAccountAlreadyClaimed": {
      "id": 1012,
      "name": "LinkedAccountAlreadyClaimed"
    },
    "InvalidFacebookToken": {
      "id": 1013,
      "name": "InvalidFacebookToken"
    },
    "AccountNotLinked": {
      "id": 1014,
      "name": "AccountNotLinked"
    },
    "FailedByPaymentProvider": {
      "id": 1015,
      "name": "FailedByPaymentProvider"
    },
    "CouponCodeNotFound": {
      "id": 1016,
      "name": "CouponCodeNotFound"
    },
    "InvalidContainerItem": {
      "id": 1017,
      "name": "InvalidContainerItem"
    },
    "ContainerNotOwned": {
      "id": 1018,
      "name": "ContainerNotOwned"
    },
    "KeyNotOwned": {
      "id": 1019,
      "name": "KeyNotOwned"
    },
    "InvalidItemIdInTable": {
      "id": 1020,
      "name": "InvalidItemIdInTable"
    },
    "InvalidReceipt": {
      "id": 1021,
      "name": "InvalidReceipt"
    },
    "ReceiptAlreadyUsed": {
      "id": 1022,
      "name": "ReceiptAlreadyUsed"
    },
    "ReceiptCancelled": {
      "id": 1023,
      "name": "ReceiptCancelled"
    },
    "GameNotFound": {
      "id": 1024,
      "name": "GameNotFound"
    },
    "GameModeNotFound": {
      "id": 1025,
      "name": "GameModeNotFound"
    },
    "InvalidGoogleToken": {
      "id": 1026,
      "name": "InvalidGoogleToken"
    },
    "UserIsNotPartOfDeveloper": {
      "id": 1027,
      "name": "UserIsNotPartOfDeveloper"
    },
    "InvalidTitleForDeveloper": {
      "id": 1028,
      "name": "InvalidTitleForDeveloper"
    },
    "TitleNameConflicts": {
      "id": 1029,
      "name": "TitleNameConflicts"
    },
    "UserisNotValid": {
      "id": 1030,
      "name": "UserisNotValid"
    },
    "ValueAlreadyExists": {
      "id": 1031,
      "name": "ValueAlreadyExists"
    },
    "BuildNotFound": {
      "id": 1032,
      "name": "BuildNotFound"
    },
    "PlayerNotInGame": {
      "id": 1033,
      "name": "PlayerNotInGame"
    },
    "InvalidTicket": {
      "id": 1034,
      "name": "InvalidTicket"
    },
    "InvalidDeveloper": {
      "id": 1035,
      "name": "InvalidDeveloper"
    },
    "InvalidOrderInfo": {
      "id": 1036,
      "name": "InvalidOrderInfo"
    },
    "RegistrationIncomplete": {
      "id": 1037,
      "name": "RegistrationIncomplete"
    },
    "InvalidPlatform": {
      "id": 1038,
      "name": "InvalidPlatform"
    },
    "UnknownError": {
      "id": 1039,
      "name": "UnknownError"
    },
    "SteamApplicationNotOwned": {
      "id": 1040,
      "name": "SteamApplicationNotOwned"
    },
    "WrongSteamAccount": {
      "id": 1041,
      "name": "WrongSteamAccount"
    },
    "TitleNotActivated": {
      "id": 1042,
      "name": "TitleNotActivated"
    },
    "RegistrationSessionNotFound": {
      "id": 1043,
      "name": "RegistrationSessionNotFound"
    },
    "NoSuchMod": {
      "id": 1044,
      "name": "NoSuchMod"
    },
    "FileNotFound": {
      "id": 1045,
      "name": "FileNotFound"
    },
    "DuplicateEmail": {
      "id": 1046,
      "name": "DuplicateEmail"
    },
    "ItemNotFound": {
      "id": 1047,
      "name": "ItemNotFound"
    },
    "ItemNotOwned": {
      "id": 1048,
      "name": "ItemNotOwned"
    },
    "ItemNotRecycleable": {
      "id": 1049,
      "name": "ItemNotRecycleable"
    },
    "ItemNotAffordable": {
      "id": 1050,
      "name": "ItemNotAffordable"
    },
    "InvalidVirtualCurrency": {
      "id": 1051,
      "name": "InvalidVirtualCurrency"
    },
    "WrongVirtualCurrency": {
      "id": 1052,
      "name": "WrongVirtualCurrency"
    },
    "WrongPrice": {
      "id": 1053,
      "name": "WrongPrice"
    },
    "NonPositiveValue": {
      "id": 1054,
      "name": "NonPositiveValue"
    },
    "InvalidRegion": {
      "id": 1055,
      "name": "InvalidRegion"
    },
    "RegionAtCapacity": {
      "id": 1056,
      "name": "RegionAtCapacity"
    },
    "ServerFailedToStart": {
      "id": 1057,
      "name": "ServerFailedToStart"
    },
    "NameNotAvailable": {
      "id": 1058,
      "name": "NameNotAvailable"
    },
    "InsufficientFunds": {
      "id": 1059,
      "name": "InsufficientFunds"
    },
    "InvalidDeviceID": {
      "id": 1060,
      "name": "InvalidDeviceID"
    },
    "InvalidPushNotificationToken": {
      "id": 1061,
      "name": "InvalidPushNotificationToken"
    },
    "NoRemainingUses": {
      "id": 1062,
      "name": "NoRemainingUses"
    },
    "InvalidPaymentProvider": {
      "id": 1063,
      "name": "InvalidPaymentProvider"
    },
    "PurchaseInitializationFailure": {
      "id": 1064,
      "name": "PurchaseInitializationFailure"
    },
    "DuplicateUsername": {
      "id": 1065,
      "name": "DuplicateUsername"
    },
    "InvalidBuyerInfo": {
      "id": 1066,
      "name": "InvalidBuyerInfo"
    },
    "NoGameModeParamsSet": {
      "id": 1067,
      "name": "NoGameModeParamsSet"
    },
    "BodyTooLarge": {
      "id": 1068,
      "name": "BodyTooLarge"
    },
    "ReservedWordInBody": {
      "id": 1069,
      "name": "ReservedWordInBody"
    },
    "InvalidTypeInBody": {
      "id": 1070,
      "name": "InvalidTypeInBody"
    },
    "InvalidRequest": {
      "id": 1071,
      "name": "InvalidRequest"
    },
    "ReservedEventName": {
      "id": 1072,
      "name": "ReservedEventName"
    },
    "InvalidUserStatistics": {
      "id": 1073,
      "name": "InvalidUserStatistics"
    },
    "NotAuthenticated": {
      "id": 1074,
      "name": "NotAuthenticated"
    },
    "StreamAlreadyExists": {
      "id": 1075,
      "name": "StreamAlreadyExists"
    },
    "ErrorCreatingStream": {
      "id": 1076,
      "name": "ErrorCreatingStream"
    },
    "StreamNotFound": {
      "id": 1077,
      "name": "StreamNotFound"
    },
    "InvalidAccount": {
      "id": 1078,
      "name": "InvalidAccount"
    },
    "PurchaseDoesNotExist": {
      "id": 1080,
      "name": "PurchaseDoesNotExist"
    },
    "InvalidPurchaseTransactionStatus": {
      "id": 1081,
      "name": "InvalidPurchaseTransactionStatus"
    },
    "APINotEnabledForGameClientAccess": {
      "id": 1082,
      "name": "APINotEnabledForGameClientAccess"
    },
    "NoPushNotificationARNForTitle": {
      "id": 1083,
      "name": "NoPushNotificationARNForTitle"
    },
    "BuildAlreadyExists": {
      "id": 1084,
      "name": "BuildAlreadyExists"
    },
    "BuildPackageDoesNotExist": {
      "id": 1085,
      "name": "BuildPackageDoesNotExist"
    },
    "CustomAnalyticsEventsNotEnabledForTitle": {
      "id": 1087,
      "name": "CustomAnalyticsEventsNotEnabledForTitle"
    },
    "InvalidSharedGroupId": {
      "id": 1088,
      "name": "InvalidSharedGroupId"
    },
    "NotAuthorized": {
      "id": 1089,
      "name": "NotAuthorized"
    },
    "MissingTitleGoogleProperties": {
      "id": 1090,
      "name": "MissingTitleGoogleProperties"
    },
    "InvalidItemProperties": {
      "id": 1091,
      "name": "InvalidItemProperties"
    },
    "InvalidPSNAuthCode": {
      "id": 1092,
      "name": "InvalidPSNAuthCode"
    },
    "InvalidItemId": {
      "id": 1093,
      "name": "InvalidItemId"
    },
    "PushNotEnabledForAccount": {
      "id": 1094,
      "name": "PushNotEnabledForAccount"
    },
    "PushServiceError": {
      "id": 1095,
      "name": "PushServiceError"
    },
    "ReceiptDoesNotContainInAppItems": {
      "id": 1096,
      "name": "ReceiptDoesNotContainInAppItems"
    },
    "ReceiptContainsMultipleInAppItems": {
      "id": 1097,
      "name": "ReceiptContainsMultipleInAppItems"
    },
    "InvalidBundleID": {
      "id": 1098,
      "name": "InvalidBundleID"
    },
    "JavascriptException": {
      "id": 1099,
      "name": "JavascriptException"
    },
    "InvalidSessionTicket": {
      "id": 1100,
      "name": "InvalidSessionTicket"
    },
    "UnableToConnectToDatabase": {
      "id": 1101,
      "name": "UnableToConnectToDatabase"
    },
    "InternalServerError": {
      "id": 1110,
      "name": "InternalServerError"
    },
    "InvalidReportDate": {
      "id": 1111,
      "name": "InvalidReportDate"
    },
    "ReportNotAvailable": {
      "id": 1112,
      "name": "ReportNotAvailable"
    },
    "DatabaseThroughputExceeded": {
      "id": 1113,
      "name": "DatabaseThroughputExceeded"
    },
    "InvalidGameTicket": {
      "id": 1115,
      "name": "InvalidGameTicket"
    },
    "ExpiredGameTicket": {
      "id": 1116,
      "name": "ExpiredGameTicket"
    },
    "GameTicketDoesNotMatchLobby": {
      "id": 1117,
      "name": "GameTicketDoesNotMatchLobby"
    },
    "LinkedDeviceAlreadyClaimed": {
      "id": 1118,
      "name": "LinkedDeviceAlreadyClaimed"
    },
    "DeviceAlreadyLinked": {
      "id": 1119,
      "name": "DeviceAlreadyLinked"
    },
    "DeviceNotLinked": {
      "id": 1120,
      "name": "DeviceNotLinked"
    },
    "PartialFailure": {
      "id": 1121,
      "name": "PartialFailure"
    },
    "PublisherNotSet": {
      "id": 1122,
      "name": "PublisherNotSet"
    },
    "ServiceUnavailable": {
      "id": 1123,
      "name": "ServiceUnavailable"
    },
    "VersionNotFound": {
      "id": 1124,
      "name": "VersionNotFound"
    },
    "RevisionNotFound": {
      "id": 1125,
      "name": "RevisionNotFound"
    },
    "InvalidPublisherId": {
      "id": 1126,
      "name": "InvalidPublisherId"
    },
    "DownstreamServiceUnavailable": {
      "id": 1127,
      "name": "DownstreamServiceUnavailable"
    },
    "APINotIncludedInTitleUsageTier": {
      "id": 1128,
      "name": "APINotIncludedInTitleUsageTier"
    },
    "DAULimitExceeded": {
      "id": 1129,
      "name": "DAULimitExceeded"
    },
    "APIRequestLimitExceeded": {
      "id": 1130,
      "name": "APIRequestLimitExceeded"
    },
    "InvalidAPIEndpoint": {
      "id": 1131,
      "name": "InvalidAPIEndpoint"
    },
    "BuildNotAvailable": {
      "id": 1132,
      "name": "BuildNotAvailable"
    },
    "ConcurrentEditError": {
      "id": 1133,
      "name": "ConcurrentEditError"
    },
    "ContentNotFound": {
      "id": 1134,
      "name": "ContentNotFound"
    },
    "CharacterNotFound": {
      "id": 1135,
      "name": "CharacterNotFound"
    },
    "CloudScriptNotFound": {
      "id": 1136,
      "name": "CloudScriptNotFound"
    },
    "ContentQuotaExceeded": {
      "id": 1137,
      "name": "ContentQuotaExceeded"
    },
    "InvalidCharacterStatistics": {
      "id": 1138,
      "name": "InvalidCharacterStatistics"
    },
    "PhotonNotEnabledForTitle": {
      "id": 1139,
      "name": "PhotonNotEnabledForTitle"
    },
    "PhotonApplicationNotFound": {
      "id": 1140,
      "name": "PhotonApplicationNotFound"
    },
    "PhotonApplicationNotAssociatedWithTitle": {
      "id": 1141,
      "name": "PhotonApplicationNotAssociatedWithTitle"
    },
    "InvalidEmailOrPassword": {
      "id": 1142,
      "name": "InvalidEmailOrPassword"
    },
    "FacebookAPIError": {
      "id": 1143,
      "name": "FacebookAPIError"
    },
    "InvalidContentType": {
      "id": 1144,
      "name": "InvalidContentType"
    },
    "KeyLengthExceeded": {
      "id": 1145,
      "name": "KeyLengthExceeded"
    },
    "DataLengthExceeded": {
      "id": 1146,
      "name": "DataLengthExceeded"
    },
    "TooManyKeys": {
      "id": 1147,
      "name": "TooManyKeys"
    },
    "FreeTierCannotHaveVirtualCurrency": {
      "id": 1148,
      "name": "FreeTierCannotHaveVirtualCurrency"
    },
    "MissingAmazonSharedKey": {
      "id": 1149,
      "name": "MissingAmazonSharedKey"
    },
    "AmazonValidationError": {
      "id": 1150,
      "name": "AmazonValidationError"
    },
    "InvalidPSNIssuerId": {
      "id": 1151,
      "name": "InvalidPSNIssuerId"
    },
    "PSNInaccessible": {
      "id": 1152,
      "name": "PSNInaccessible"
    },
    "ExpiredAuthToken": {
      "id": 1153,
      "name": "ExpiredAuthToken"
    },
    "FailedToGetEntitlements": {
      "id": 1154,
      "name": "FailedToGetEntitlements"
    },
    "FailedToConsumeEntitlement": {
      "id": 1155,
      "name": "FailedToConsumeEntitlement"
    },
    "TradeAcceptingUserNotAllowed": {
      "id": 1156,
      "name": "TradeAcceptingUserNotAllowed"
    },
    "TradeInventoryItemIsAssignedToCharacter": {
      "id": 1157,
      "name": "TradeInventoryItemIsAssignedToCharacter"
    },
    "TradeInventoryItemIsBundle": {
      "id": 1158,
      "name": "TradeInventoryItemIsBundle"
    },
    "TradeStatusNotValidForCancelling": {
      "id": 1159,
      "name": "TradeStatusNotValidForCancelling"
    },
    "TradeStatusNotValidForAccepting": {
      "id": 1160,
      "name": "TradeStatusNotValidForAccepting"
    },
    "TradeDoesNotExist": {
      "id": 1161,
      "name": "TradeDoesNotExist"
    },
    "TradeCancelled": {
      "id": 1162,
      "name": "TradeCancelled"
    },
    "TradeAlreadyFilled": {
      "id": 1163,
      "name": "TradeAlreadyFilled"
    },
    "TradeWaitForStatusTimeout": {
      "id": 1164,
      "name": "TradeWaitForStatusTimeout"
    },
    "TradeInventoryItemExpired": {
      "id": 1165,
      "name": "TradeInventoryItemExpired"
    },
    "TradeMissingOfferedAndAcceptedItems": {
      "id": 1166,
      "name": "TradeMissingOfferedAndAcceptedItems"
    },
    "TradeAcceptedItemIsBundle": {
      "id": 1167,
      "name": "TradeAcceptedItemIsBundle"
    },
    "TradeAcceptedItemIsStackable": {
      "id": 1168,
      "name": "TradeAcceptedItemIsStackable"
    },
    "TradeInventoryItemInvalidStatus": {
      "id": 1169,
      "name": "TradeInventoryItemInvalidStatus"
    },
    "TradeAcceptedCatalogItemInvalid": {
      "id": 1170,
      "name": "TradeAcceptedCatalogItemInvalid"
    },
    "TradeAllowedUsersInvalid": {
      "id": 1171,
      "name": "TradeAllowedUsersInvalid"
    },
    "TradeInventoryItemDoesNotExist": {
      "id": 1172,
      "name": "TradeInventoryItemDoesNotExist"
    },
    "TradeInventoryItemIsConsumed": {
      "id": 1173,
      "name": "TradeInventoryItemIsConsumed"
    },
    "TradeInventoryItemIsStackable": {
      "id": 1174,
      "name": "TradeInventoryItemIsStackable"
    },
    "TradeAcceptedItemsMismatch": {
      "id": 1175,
      "name": "TradeAcceptedItemsMismatch"
    },
    "InvalidKongregateToken": {
      "id": 1176,
      "name": "InvalidKongregateToken"
    },
    "FeatureNotConfiguredForTitle": {
      "id": 1177,
      "name": "FeatureNotConfiguredForTitle"
    },
    "NoMatchingCatalogItemForReceipt": {
      "id": 1178,
      "name": "NoMatchingCatalogItemForReceipt"
    },
    "InvalidCurrencyCode": {
      "id": 1179,
      "name": "InvalidCurrencyCode"
    },
    "NoRealMoneyPriceForCatalogItem": {
      "id": 1180,
      "name": "NoRealMoneyPriceForCatalogItem"
    },
    "TradeInventoryItemIsNotTradable": {
      "id": 1181,
      "name": "TradeInventoryItemIsNotTradable"
    },
    "TradeAcceptedCatalogItemIsNotTradable": {
      "id": 1182,
      "name": "TradeAcceptedCatalogItemIsNotTradable"
    },
    "UsersAlreadyFriends": {
      "id": 1183,
      "name": "UsersAlreadyFriends"
    },
    "LinkedIdentifierAlreadyClaimed": {
      "id": 1184,
      "name": "LinkedIdentifierAlreadyClaimed"
    },
    "CustomIdNotLinked": {
      "id": 1185,
      "name": "CustomIdNotLinked"
    },
    "TotalDataSizeExceeded": {
      "id": 1186,
      "name": "TotalDataSizeExceeded"
    },
    "DeleteKeyConflict": {
      "id": 1187,
      "name": "DeleteKeyConflict"
    },
    "InvalidXboxLiveToken": {
      "id": 1188,
      "name": "InvalidXboxLiveToken"
    },
    "ExpiredXboxLiveToken": {
      "id": 1189,
      "name": "ExpiredXboxLiveToken"
    },
    "ResettableStatisticVersionRequired": {
      "id": 1190,
      "name": "ResettableStatisticVersionRequired"
    },
    "NotAuthorizedByTitle": {
      "id": 1191,
      "name": "NotAuthorizedByTitle"
    },
    "NoPartnerEnabled": {
      "id": 1192,
      "name": "NoPartnerEnabled"
    },
    "InvalidPartnerResponse": {
      "id": 1193,
      "name": "InvalidPartnerResponse"
    },
    "APINotEnabledForGameServerAccess": {
      "id": 1194,
      "name": "APINotEnabledForGameServerAccess"
    },
    "StatisticNotFound": {
      "id": 1195,
      "name": "StatisticNotFound"
    },
    "StatisticNameConflict": {
      "id": 1196,
      "name": "StatisticNameConflict"
    },
    "StatisticVersionClosedForWrites": {
      "id": 1197,
      "name": "StatisticVersionClosedForWrites"
    },
    "StatisticVersionInvalid": {
      "id": 1198,
      "name": "StatisticVersionInvalid"
    },
    "APIClientRequestRateLimitExceeded": {
      "id": 1199,
      "name": "APIClientRequestRateLimitExceeded"
    },
    "InvalidJSONContent": {
      "id": 1200,
      "name": "InvalidJSONContent"
    },
    "InvalidDropTable": {
      "id": 1201,
      "name": "InvalidDropTable"
    },
    "StatisticVersionAlreadyIncrementedForScheduledInterval": {
      "id": 1202,
      "name": "StatisticVersionAlreadyIncrementedForScheduledInterval"
    },
    "StatisticCountLimitExceeded": {
      "id": 1203,
      "name": "StatisticCountLimitExceeded"
    },
    "StatisticVersionIncrementRateExceeded": {
      "id": 1204,
      "name": "StatisticVersionIncrementRateExceeded"
    },
    "ContainerKeyInvalid": {
      "id": 1205,
      "name": "ContainerKeyInvalid"
    },
    "CloudScriptExecutionTimeLimitExceeded": {
      "id": 1206,
      "name": "CloudScriptExecutionTimeLimitExceeded"
    },
    "NoWritePermissionsForEvent": {
      "id": 1207,
      "name": "NoWritePermissionsForEvent"
    },
    "CloudScriptFunctionArgumentSizeExceeded": {
      "id": 1208,
      "name": "CloudScriptFunctionArgumentSizeExceeded"
    },
    "CloudScriptAPIRequestCountExceeded": {
      "id": 1209,
      "name": "CloudScriptAPIRequestCountExceeded"
    },
    "CloudScriptAPIRequestError": {
      "id": 1210,
      "name": "CloudScriptAPIRequestError"
    },
    "CloudScriptHTTPRequestError": {
      "id": 1211,
      "name": "CloudScriptHTTPRequestError"
    },
    "InsufficientGuildRole": {
      "id": 1212,
      "name": "InsufficientGuildRole"
    },
    "GuildNotFound": {
      "id": 1213,
      "name": "GuildNotFound"
    },
    "OverLimit": {
      "id": 1214,
      "name": "OverLimit"
    },
    "EventNotFound": {
      "id": 1215,
      "name": "EventNotFound"
    },
    "InvalidEventField": {
      "id": 1216,
      "name": "InvalidEventField"
    },
    "InvalidEventName": {
      "id": 1217,
      "name": "InvalidEventName"
    },
    "CatalogNotConfigured": {
      "id": 1218,
      "name": "CatalogNotConfigured"
    },
    "OperationNotSupportedForPlatform": {
      "id": 1219,
      "name": "OperationNotSupportedForPlatform"
    },
    "SegmentNotFound": {
      "id": 1220,
      "name": "SegmentNotFound"
    },
    "StoreNotFound": {
      "id": 1221,
      "name": "StoreNotFound"
    },
    "InvalidStatisticName": {
      "id": 1222,
      "name": "InvalidStatisticName"
    },
    "TitleNotQualifiedForLimit": {
      "id": 1223,
      "name": "TitleNotQualifiedForLimit"
    },
    "InvalidServiceLimitLevel": {
      "id": 1224,
      "name": "InvalidServiceLimitLevel"
    },
    "ServiceLimitLevelInTransition": {
      "id": 1225,
      "name": "ServiceLimitLevelInTransition"
    },
    "CouponAlreadyRedeemed": {
      "id": 1226,
      "name": "CouponAlreadyRedeemed"
    },
    "GameServerBuildSizeLimitExceeded": {
      "id": 1227,
      "name": "GameServerBuildSizeLimitExceeded"
    },
    "GameServerBuildCountLimitExceeded": {
      "id": 1228,
      "name": "GameServerBuildCountLimitExceeded"
    },
    "VirtualCurrencyCountLimitExceeded": {
      "id": 1229,
      "name": "VirtualCurrencyCountLimitExceeded"
    },
    "VirtualCurrencyCodeExists": {
      "id": 1230,
      "name": "VirtualCurrencyCodeExists"
    },
    "TitleNewsItemCountLimitExceeded": {
      "id": 1231,
      "name": "TitleNewsItemCountLimitExceeded"
    },
    "InvalidTwitchToken": {
      "id": 1232,
      "name": "InvalidTwitchToken"
    },
    "TwitchResponseError": {
      "id": 1233,
      "name": "TwitchResponseError"
    },
    "ProfaneDisplayName": {
      "id": 1234,
      "name": "ProfaneDisplayName"
    },
    "UserAlreadyAdded": {
      "id": 1235,
      "name": "UserAlreadyAdded"
    },
    "InvalidVirtualCurrencyCode": {
      "id": 1236,
      "name": "InvalidVirtualCurrencyCode"
    },
    "VirtualCurrencyCannotBeDeleted": {
      "id": 1237,
      "name": "VirtualCurrencyCannotBeDeleted"
    },
    "IdentifierAlreadyClaimed": {
      "id": 1238,
      "name": "IdentifierAlreadyClaimed"
    },
    "IdentifierNotLinked": {
      "id": 1239,
      "name": "IdentifierNotLinked"
    },
    "InvalidContinuationToken": {
      "id": 1240,
      "name": "InvalidContinuationToken"
    },
    "ExpiredContinuationToken": {
      "id": 1241,
      "name": "ExpiredContinuationToken"
    },
    "InvalidSegment": {
      "id": 1242,
      "name": "InvalidSegment"
    },
    "InvalidSessionId": {
      "id": 1243,
      "name": "InvalidSessionId"
    },
    "SessionLogNotFound": {
      "id": 1244,
      "name": "SessionLogNotFound"
    },
    "InvalidSearchTerm": {
      "id": 1245,
      "name": "InvalidSearchTerm"
    },
    "TwoFactorAuthenticationTokenRequired": {
      "id": 1246,
      "name": "TwoFactorAuthenticationTokenRequired"
    },
    "GameServerHostCountLimitExceeded": {
      "id": 1247,
      "name": "GameServerHostCountLimitExceeded"
    },
    "PlayerTagCountLimitExceeded": {
      "id": 1248,
      "name": "PlayerTagCountLimitExceeded"
    },
    "RequestAlreadyRunning": {
      "id": 1249,
      "name": "RequestAlreadyRunning"
    },
    "ActionGroupNotFound": {
      "id": 1250,
      "name": "ActionGroupNotFound"
    },
    "MaximumSegmentBulkActionJobsRunning": {
      "id": 1251,
      "name": "MaximumSegmentBulkActionJobsRunning"
    },
    "NoActionsOnPlayersInSegmentJob": {
      "id": 1252,
      "name": "NoActionsOnPlayersInSegmentJob"
    },
    "DuplicateStatisticName": {
      "id": 1253,
      "name": "DuplicateStatisticName"
    },
    "ScheduledTaskNameConflict": {
      "id": 1254,
      "name": "ScheduledTaskNameConflict"
    },
    "ScheduledTaskCreateConflict": {
      "id": 1255,
      "name": "ScheduledTaskCreateConflict"
    },
    "InvalidScheduledTaskName": {
      "id": 1256,
      "name": "InvalidScheduledTaskName"
    },
    "InvalidTaskSchedule": {
      "id": 1257,
      "name": "InvalidTaskSchedule"
    },
    "SteamNotEnabledForTitle": {
      "id": 1258,
      "name": "SteamNotEnabledForTitle"
    },
    "LimitNotAnUpgradeOption": {
      "id": 1259,
      "name": "LimitNotAnUpgradeOption"
    },
    "NoSecretKeyEnabledForCloudScript": {
      "id": 1260,
      "name": "NoSecretKeyEnabledForCloudScript"
    },
    "TaskNotFound": {
      "id": 1261,
      "name": "TaskNotFound"
    },
    "TaskInstanceNotFound": {
      "id": 1262,
      "name": "TaskInstanceNotFound"
    },
    "InvalidIdentityProviderId": {
      "id": 1263,
      "name": "InvalidIdentityProviderId"
    },
    "MisconfiguredIdentityProvider": {
      "id": 1264,
      "name": "MisconfiguredIdentityProvider"
    },
    "InvalidScheduledTaskType": {
      "id": 1265,
      "name": "InvalidScheduledTaskType"
    },
    "BillingInformationRequired": {
      "id": 1266,
      "name": "BillingInformationRequired"
    },
    "LimitedEditionItemUnavailable": {
      "id": 1267,
      "name": "LimitedEditionItemUnavailable"
    },
    "InvalidAdPlacementAndReward": {
      "id": 1268,
      "name": "InvalidAdPlacementAndReward"
    },
    "AllAdPlacementViewsAlreadyConsumed": {
      "id": 1269,
      "name": "AllAdPlacementViewsAlreadyConsumed"
    },
    "GoogleOAuthNotConfiguredForTitle": {
      "id": 1270,
      "name": "GoogleOAuthNotConfiguredForTitle"
    },
    "GoogleOAuthError": {
      "id": 1271,
      "name": "GoogleOAuthError"
    },
    "UserNotFriend": {
      "id": 1272,
      "name": "UserNotFriend"
    },
    "InvalidSignature": {
      "id": 1273,
      "name": "InvalidSignature"
    },
    "InvalidPublicKey": {
      "id": 1274,
      "name": "InvalidPublicKey"
    },
    "GoogleOAuthNoIdTokenIncludedInResponse": {
      "id": 1275,
      "name": "GoogleOAuthNoIdTokenIncludedInResponse"
    },
    "StatisticUpdateInProgress": {
      "id": 1276,
      "name": "StatisticUpdateInProgress"
    },
    "LeaderboardVersionNotAvailable": {
      "id": 1277,
      "name": "LeaderboardVersionNotAvailable"
    },
    "StatisticAlreadyHasPrizeTable": {
      "id": 1279,
      "name": "StatisticAlreadyHasPrizeTable"
    },
    "PrizeTableHasOverlappingRanks": {
      "id": 1280,
      "name": "PrizeTableHasOverlappingRanks"
    },
    "PrizeTableHasMissingRanks": {
      "id": 1281,
      "name": "PrizeTableHasMissingRanks"
    },
    "PrizeTableRankStartsAtZero": {
      "id": 1282,
      "name": "PrizeTableRankStartsAtZero"
    },
    "InvalidStatistic": {
      "id": 1283,
      "name": "InvalidStatistic"
    },
    "ExpressionParseFailure": {
      "id": 1284,
      "name": "ExpressionParseFailure"
    },
    "ExpressionInvokeFailure": {
      "id": 1285,
      "name": "ExpressionInvokeFailure"
    },
    "ExpressionTooLong": {
      "id": 1286,
      "name": "ExpressionTooLong"
    },
    "DataUpdateRateExceeded": {
      "id": 1287,
      "name": "DataUpdateRateExceeded"
    },
    "RestrictedEmailDomain": {
      "id": 1288,
      "name": "RestrictedEmailDomain"
    },
    "EncryptionKeyDisabled": {
      "id": 1289,
      "name": "EncryptionKeyDisabled"
    },
    "EncryptionKeyMissing": {
      "id": 1290,
      "name": "EncryptionKeyMissing"
    },
    "EncryptionKeyBroken": {
      "id": 1291,
      "name": "EncryptionKeyBroken"
    },
    "NoSharedSecretKeyConfigured": {
      "id": 1292,
      "name": "NoSharedSecretKeyConfigured"
    },
    "SecretKeyNotFound": {
      "id": 1293,
      "name": "SecretKeyNotFound"
    },
    "PlayerSecretAlreadyConfigured": {
      "id": 1294,
      "name": "PlayerSecretAlreadyConfigured"
    },
    "APIRequestsDisabledForTitle": {
      "id": 1295,
      "name": "APIRequestsDisabledForTitle"
    },
    "InvalidSharedSecretKey": {
      "id": 1296,
      "name": "InvalidSharedSecretKey"
    },
    "PrizeTableHasNoRanks": {
      "id": 1297,
      "name": "PrizeTableHasNoRanks"
    },
    "ProfileDoesNotExist": {
      "id": 1298,
      "name": "ProfileDoesNotExist"
    },
    "ContentS3OriginBucketNotConfigured": {
      "id": 1299,
      "name": "ContentS3OriginBucketNotConfigured"
    },
    "InvalidEnvironmentForReceipt": {
      "id": 1300,
      "name": "InvalidEnvironmentForReceipt"
    },
    "EncryptedRequestNotAllowed": {
      "id": 1301,
      "name": "EncryptedRequestNotAllowed"
    },
    "SignedRequestNotAllowed": {
      "id": 1302,
      "name": "SignedRequestNotAllowed"
    },
    "RequestViewConstraintParamsNotAllowed": {
      "id": 1303,
      "name": "RequestViewConstraintParamsNotAllowed"
    },
    "BadPartnerConfiguration": {
      "id": 1304,
      "name": "BadPartnerConfiguration"
    },
    "XboxBPCertificateFailure": {
      "id": 1305,
      "name": "XboxBPCertificateFailure"
    },
    "XboxXASSExchangeFailure": {
      "id": 1306,
      "name": "XboxXASSExchangeFailure"
    },
    "InvalidEntityId": {
      "id": 1307,
      "name": "InvalidEntityId"
    },
    "StatisticValueAggregationOverflow": {
      "id": 1308,
      "name": "StatisticValueAggregationOverflow"
    },
    "EmailMessageFromAddressIsMissing": {
      "id": 1309,
      "name": "EmailMessageFromAddressIsMissing"
    },
    "EmailMessageToAddressIsMissing": {
      "id": 1310,
      "name": "EmailMessageToAddressIsMissing"
    },
    "SmtpServerAuthenticationError": {
      "id": 1311,
      "name": "SmtpServerAuthenticationError"
    },
    "SmtpServerLimitExceeded": {
      "id": 1312,
      "name": "SmtpServerLimitExceeded"
    },
    "SmtpServerInsufficientStorage": {
      "id": 1313,
      "name": "SmtpServerInsufficientStorage"
    },
    "SmtpServerCommunicationError": {
      "id": 1314,
      "name": "SmtpServerCommunicationError"
    },
    "SmtpServerGeneralFailure": {
      "id": 1315,
      "name": "SmtpServerGeneralFailure"
    },
    "EmailClientTimeout": {
      "id": 1316,
      "name": "EmailClientTimeout"
    },
    "EmailClientCanceledTask": {
      "id": 1317,
      "name": "EmailClientCanceledTask"
    },
    "EmailTemplateMissing": {
      "id": 1318,
      "name": "EmailTemplateMissing"
    },
    "InvalidHostForTitleId": {
      "id": 1319,
      "name": "InvalidHostForTitleId"
    },
    "EmailConfirmationTokenDoesNotExist": {
      "id": 1320,
      "name": "EmailConfirmationTokenDoesNotExist"
    },
    "EmailConfirmationTokenExpired": {
      "id": 1321,
      "name": "EmailConfirmationTokenExpired"
    },
    "AccountDeleted": {
      "id": 1322,
      "name": "AccountDeleted"
    },
    "PlayerSecretNotConfigured": {
      "id": 1323,
      "name": "PlayerSecretNotConfigured"
    },
    "InvalidSignatureTime": {
      "id": 1324,
      "name": "InvalidSignatureTime"
    },
    "NoContactEmailAddressFound": {
      "id": 1325,
      "name": "NoContactEmailAddressFound"
    },
    "InvalidAuthToken": {
      "id": 1326,
      "name": "InvalidAuthToken"
    },
    "AuthTokenDoesNotExist": {
      "id": 1327,
      "name": "AuthTokenDoesNotExist"
    },
    "AuthTokenExpired": {
      "id": 1328,
      "name": "AuthTokenExpired"
    },
    "AuthTokenAlreadyUsedToResetPassword": {
      "id": 1329,
      "name": "AuthTokenAlreadyUsedToResetPassword"
    },
    "MembershipNameTooLong": {
      "id": 1330,
      "name": "MembershipNameTooLong"
    },
    "MembershipNotFound": {
      "id": 1331,
      "name": "MembershipNotFound"
    },
    "GoogleServiceAccountInvalid": {
      "id": 1332,
      "name": "GoogleServiceAccountInvalid"
    },
    "GoogleServiceAccountParseFailure": {
      "id": 1333,
      "name": "GoogleServiceAccountParseFailure"
    },
    "EntityTokenMissing": {
      "id": 1334,
      "name": "EntityTokenMissing"
    },
    "EntityTokenInvalid": {
      "id": 1335,
      "name": "EntityTokenInvalid"
    },
    "EntityTokenExpired": {
      "id": 1336,
      "name": "EntityTokenExpired"
    },
    "EntityTokenRevoked": {
      "id": 1337,
      "name": "EntityTokenRevoked"
    },
    "InvalidProductForSubscription": {
      "id": 1338,
      "name": "InvalidProductForSubscription"
    },
    "XboxInaccessible": {
      "id": 1339,
      "name": "XboxInaccessible"
    },
    "SubscriptionAlreadyTaken": {
      "id": 1340,
      "name": "SubscriptionAlreadyTaken"
    },
    "SmtpAddonNotEnabled": {
      "id": 1341,
      "name": "SmtpAddonNotEnabled"
    },
    "APIConcurrentRequestLimitExceeded": {
      "id": 1342,
      "name": "APIConcurrentRequestLimitExceeded"
    },
    "XboxRejectedXSTSExchangeRequest": {
      "id": 1343,
      "name": "XboxRejectedXSTSExchangeRequest"
    },
    "VariableNotDefined": {
      "id": 1344,
      "name": "VariableNotDefined"
    },
    "TemplateVersionNotDefined": {
      "id": 1345,
      "name": "TemplateVersionNotDefined"
    },
    "FileTooLarge": {
      "id": 1346,
      "name": "FileTooLarge"
    },
    "TitleDeleted": {
      "id": 1347,
      "name": "TitleDeleted"
    },
    "TitleContainsUserAccounts": {
      "id": 1348,
      "name": "TitleContainsUserAccounts"
    },
    "TitleDeletionPlayerCleanupFailure": {
      "id": 1349,
      "name": "TitleDeletionPlayerCleanupFailure"
    },
    "EntityFileOperationPending": {
      "id": 1350,
      "name": "EntityFileOperationPending"
    },
    "NoEntityFileOperationPending": {
      "id": 1351,
      "name": "NoEntityFileOperationPending"
    },
    "EntityProfileVersionMismatch": {
      "id": 1352,
      "name": "EntityProfileVersionMismatch"
    },
    "TemplateVersionTooOld": {
      "id": 1353,
      "name": "TemplateVersionTooOld"
    },
    "MembershipDefinitionInUse": {
      "id": 1354,
      "name": "MembershipDefinitionInUse"
    },
    "PaymentPageNotConfigured": {
      "id": 1355,
      "name": "PaymentPageNotConfigured"
    },
    "FailedLoginAttemptRateLimitExceeded": {
      "id": 1356,
      "name": "FailedLoginAttemptRateLimitExceeded"
    },
    "EntityBlockedByGroup": {
      "id": 1357,
      "name": "EntityBlockedByGroup"
    },
    "RoleDoesNotExist": {
      "id": 1358,
      "name": "RoleDoesNotExist"
    },
    "EntityIsAlreadyMember": {
      "id": 1359,
      "name": "EntityIsAlreadyMember"
    },
    "DuplicateRoleId": {
      "id": 1360,
      "name": "DuplicateRoleId"
    },
    "GroupInvitationNotFound": {
      "id": 1361,
      "name": "GroupInvitationNotFound"
    },
    "GroupApplicationNotFound": {
      "id": 1362,
      "name": "GroupApplicationNotFound"
    },
    "OutstandingInvitationAcceptedInstead": {
      "id": 1363,
      "name": "OutstandingInvitationAcceptedInstead"
    },
    "OutstandingApplicationAcceptedInstead": {
      "id": 1364,
      "name": "OutstandingApplicationAcceptedInstead"
    },
    "RoleIsGroupDefaultMember": {
      "id": 1365,
      "name": "RoleIsGroupDefaultMember"
    },
    "RoleIsGroupAdmin": {
      "id": 1366,
      "name": "RoleIsGroupAdmin"
    },
    "RoleNameNotAvailable": {
      "id": 1367,
      "name": "RoleNameNotAvailable"
    },
    "GroupNameNotAvailable": {
      "id": 1368,
      "name": "GroupNameNotAvailable"
    },
    "EmailReportAlreadySent": {
      "id": 1369,
      "name": "EmailReportAlreadySent"
    },
    "EmailReportRecipientBlacklisted": {
      "id": 1370,
      "name": "EmailReportRecipientBlacklisted"
    },
    "EventNamespaceNotAllowed": {
      "id": 1371,
      "name": "EventNamespaceNotAllowed"
    },
    "EventEntityNotAllowed": {
      "id": 1372,
      "name": "EventEntityNotAllowed"
    },
    "InvalidEntityType": {
      "id": 1373,
      "name": "InvalidEntityType"
    },
    "NullTokenResultFromAad": {
      "id": 1374,
      "name": "NullTokenResultFromAad"
    },
    "InvalidTokenResultFromAad": {
      "id": 1375,
      "name": "InvalidTokenResultFromAad"
    },
    "NoValidCertificateForAad": {
      "id": 1376,
      "name": "NoValidCertificateForAad"
    },
    "InvalidCertificateForAad": {
      "id": 1377,
      "name": "InvalidCertificateForAad"
    },
    "DuplicateDropTableId": {
      "id": 1378,
      "name": "DuplicateDropTableId"
    },
    "MultiplayerServerError": {
      "id": 1379,
      "name": "MultiplayerServerError"
    },
    "MultiplayerServerTooManyRequests": {
      "id": 1380,
      "name": "MultiplayerServerTooManyRequests"
    },
    "MultiplayerServerNoContent": {
      "id": 1381,
      "name": "MultiplayerServerNoContent"
    },
    "MultiplayerServerBadRequest": {
      "id": 1382,
      "name": "MultiplayerServerBadRequest"
    },
    "MultiplayerServerUnauthorized": {
      "id": 1383,
      "name": "MultiplayerServerUnauthorized"
    },
    "MultiplayerServerForbidden": {
      "id": 1384,
      "name": "MultiplayerServerForbidden"
    },
    "MultiplayerServerNotFound": {
      "id": 1385,
      "name": "MultiplayerServerNotFound"
    },
    "MultiplayerServerConflict": {
      "id": 1386,
      "name": "MultiplayerServerConflict"
    },
    "MultiplayerServerInternalServerError": {
      "id": 1387,
      "name": "MultiplayerServerInternalServerError"
    },
    "MultiplayerServerUnavailable": {
      "id": 1388,
      "name": "MultiplayerServerUnavailable"
    },
    "ExplicitContentDetected": {
      "id": 1389,
      "name": "ExplicitContentDetected"
    },
    "PIIContentDetected": {
      "id": 1390,
      "name": "PIIContentDetected"
    },
    "InvalidScheduledTaskParameter": {
      "id": 1391,
      "name": "InvalidScheduledTaskParameter"
    },
    "PerEntityEventRateLimitExceeded": {
      "id": 1392,
      "name": "PerEntityEventRateLimitExceeded"
    },
    "TitleDefaultLanguageNotSet": {
      "id": 1393,
      "name": "TitleDefaultLanguageNotSet"
    },
    "EmailTemplateMissingDefaultVersion": {
      "id": 1394,
      "name": "EmailTemplateMissingDefaultVersion"
    },
    "FacebookInstantGamesIdNotLinked": {
      "id": 1395,
      "name": "FacebookInstantGamesIdNotLinked"
    },
    "InvalidFacebookInstantGamesSignature": {
      "id": 1396,
      "name": "InvalidFacebookInstantGamesSignature"
    },
    "FacebookInstantGamesAuthNotConfiguredForTitle": {
      "id": 1397,
      "name": "FacebookInstantGamesAuthNotConfiguredForTitle"
    },
    "EntityProfileConstraintValidationFailed": {
      "id": 1398,
      "name": "EntityProfileConstraintValidationFailed"
    },
    "TelemetryIngestionKeyPending": {
      "id": 1399,
      "name": "TelemetryIngestionKeyPending"
    },
    "TelemetryIngestionKeyNotFound": {
      "id": 1400,
      "name": "TelemetryIngestionKeyNotFound"
    },
    "StatisticTagRequired": {
      "id": 1401,
      "name": "StatisticTagRequired"
    },
    "StatisticTagInvalid": {
      "id": 1402,
      "name": "StatisticTagInvalid"
    },
    "DataIntegrityError": {
      "id": 1403,
      "name": "DataIntegrityError"
    },
    "VirtualCurrencyCannotBeSetToOlderVersion": {
      "id": 1404,
      "name": "VirtualCurrencyCannotBeSetToOlderVersion"
    },
    "VirtualCurrencyMustBeWithinIntegerRange": {
      "id": 1405,
      "name": "VirtualCurrencyMustBeWithinIntegerRange"
    },
    "EmailTemplateInvalidSyntax": {
      "id": 1406,
      "name": "EmailTemplateInvalidSyntax"
    },
    "EmailTemplateMissingCallback": {
      "id": 1407,
      "name": "EmailTemplateMissingCallback"
    },
    "PushNotificationTemplateInvalidPayload": {
      "id": 1408,
      "name": "PushNotificationTemplateInvalidPayload"
    },
    "InvalidLocalizedPushNotificationLanguage": {
      "id": 1409,
      "name": "InvalidLocalizedPushNotificationLanguage"
    },
    "MissingLocalizedPushNotificationMessage": {
      "id": 1410,
      "name": "MissingLocalizedPushNotificationMessage"
    },
    "PushNotificationTemplateMissingPlatformPayload": {
      "id": 1411,
      "name": "PushNotificationTemplateMissingPlatformPayload"
    },
    "PushNotificationTemplatePayloadContainsInvalidJson": {
      "id": 1412,
      "name": "PushNotificationTemplatePayloadContainsInvalidJson"
    },
    "PushNotificationTemplateContainsInvalidIosPayload": {
      "id": 1413,
      "name": "PushNotificationTemplateContainsInvalidIosPayload"
    },
    "PushNotificationTemplateContainsInvalidAndroidPayload": {
      "id": 1414,
      "name": "PushNotificationTemplateContainsInvalidAndroidPayload"
    },
    "PushNotificationTemplateIosPayloadMissingNotificationBody": {
      "id": 1415,
      "name": "PushNotificationTemplateIosPayloadMissingNotificationBody"
    },
    "PushNotificationTemplateAndroidPayloadMissingNotificationBody": {
      "id": 1416,
      "name": "PushNotificationTemplateAndroidPayloadMissingNotificationBody"
    },
    "PushNotificationTemplateNotFound": {
      "id": 1417,
      "name": "PushNotificationTemplateNotFound"
    },
    "PushNotificationTemplateMissingDefaultVersion": {
      "id": 1418,
      "name": "PushNotificationTemplateMissingDefaultVersion"
    },
    "PushNotificationTemplateInvalidSyntax": {
      "id": 1419,
      "name": "PushNotificationTemplateInvalidSyntax"
    },
    "PushNotificationTemplateNoCustomPayloadForV1": {
      "id": 1420,
      "name": "PushNotificationTemplateNoCustomPayloadForV1"
    },
    "NoLeaderboardForStatistic": {
      "id": 1421,
      "name": "NoLeaderboardForStatistic"
    },
    "TitleNewsMissingDefaultLanguage": {
      "id": 1422,
      "name": "TitleNewsMissingDefaultLanguage"
    },
    "TitleNewsNotFound": {
      "id": 1423,
      "name": "TitleNewsNotFound"
    },
    "TitleNewsDuplicateLanguage": {
      "id": 1424,
      "name": "TitleNewsDuplicateLanguage"
    },
    "TitleNewsMissingTitleOrBody": {
      "id": 1425,
      "name": "TitleNewsMissingTitleOrBody"
    },
    "TitleNewsInvalidLanguage": {
      "id": 1426,
      "name": "TitleNewsInvalidLanguage"
    },
    "EmailRecipientBlacklisted": {
      "id": 1427,
      "name": "EmailRecipientBlacklisted"
    },
    "InvalidGameCenterAuthRequest": {
      "id": 1428,
      "name": "InvalidGameCenterAuthRequest"
    },
    "GameCenterAuthenticationFailed": {
      "id": 1429,
      "name": "GameCenterAuthenticationFailed"
    },
    "CannotEnablePartiesForTitle": {
      "id": 1430,
      "name": "CannotEnablePartiesForTitle"
    },
    "PartyError": {
      "id": 1431,
      "name": "PartyError"
    },
    "PartyRequests": {
      "id": 1432,
      "name": "PartyRequests"
    },
    "PartyNoContent": {
      "id": 1433,
      "name": "PartyNoContent"
    },
    "PartyBadRequest": {
      "id": 1434,
      "name": "PartyBadRequest"
    },
    "PartyUnauthorized": {
      "id": 1435,
      "name": "PartyUnauthorized"
    },
    "PartyForbidden": {
      "id": 1436,
      "name": "PartyForbidden"
    },
    "PartyNotFound": {
      "id": 1437,
      "name": "PartyNotFound"
    },
    "PartyConflict": {
      "id": 1438,
      "name": "PartyConflict"
    },
    "PartyInternalServerError": {
      "id": 1439,
      "name": "PartyInternalServerError"
    },
    "PartyUnavailable": {
      "id": 1440,
      "name": "PartyUnavailable"
    },
    "PartyTooManyRequests": {
      "id": 1441,
      "name": "PartyTooManyRequests"
    },
    "PushNotificationTemplateMissingName": {
      "id": 1442,
      "name": "PushNotificationTemplateMissingName"
    },
    "CannotEnableMultiplayerServersForTitle": {
      "id": 1443,
      "name": "CannotEnableMultiplayerServersForTitle"
    },
    "WriteAttemptedDuringExport": {
      "id": 1444,
      "name": "WriteAttemptedDuringExport"
    },
    "MatchmakingEntityInvalid": {
      "id": 2001,
      "name": "MatchmakingEntityInvalid"
    },
    "MatchmakingPlayerAttributesInvalid": {
      "id": 2002,
      "name": "MatchmakingPlayerAttributesInvalid"
    },
    "MatchmakingCreateTicketRequestMissing": {
      "id": 2003,
      "name": "MatchmakingCreateTicketRequestMissing"
    },
    "MatchmakingCreateTicketCreatorMissing": {
      "id": 2004,
      "name": "MatchmakingCreateTicketCreatorMissing"
    },
    "MatchmakingCreateTicketCreatorIdMissing": {
      "id": 2005,
      "name": "MatchmakingCreateTicketCreatorIdMissing"
    },
    "MatchmakingCreateTicketMemberListMissing": {
      "id": 2006,
      "name": "MatchmakingCreateTicketMemberListMissing"
    },
    "MatchmakingCreateTicketGiveUpAfterInvalid": {
      "id": 2007,
      "name": "MatchmakingCreateTicketGiveUpAfterInvalid"
    },
    "MatchmakingTicketIdMissing": {
      "id": 2008,
      "name": "MatchmakingTicketIdMissing"
    },
    "MatchmakingMatchIdMissing": {
      "id": 2009,
      "name": "MatchmakingMatchIdMissing"
    },
    "MatchmakingMatchIdIdMissing": {
      "id": 2010,
      "name": "MatchmakingMatchIdIdMissing"
    },
    "MatchmakingQueueNameMissing": {
      "id": 2011,
      "name": "MatchmakingQueueNameMissing"
    },
    "MatchmakingTitleIdMissing": {
      "id": 2012,
      "name": "MatchmakingTitleIdMissing"
    },
    "MatchmakingTicketIdIdMissing": {
      "id": 2013,
      "name": "MatchmakingTicketIdIdMissing"
    },
    "MatchmakingPlayerIdMissing": {
      "id": 2014,
      "name": "MatchmakingPlayerIdMissing"
    },
    "MatchmakingJoinTicketPlayerMissing": {
      "id": 2015,
      "name": "MatchmakingJoinTicketPlayerMissing"
    },
    "MatchmakingQueueConfigNotFound": {
      "id": 2016,
      "name": "MatchmakingQueueConfigNotFound"
    },
    "MatchmakingMatchNotFound": {
      "id": 2017,
      "name": "MatchmakingMatchNotFound"
    },
    "MatchmakingTicketNotFound": {
      "id": 2018,
      "name": "MatchmakingTicketNotFound"
    },
    "MatchmakingCreateTicketServerIdentityInvalid": {
      "id": 2019,
      "name": "MatchmakingCreateTicketServerIdentityInvalid"
    },
    "MatchmakingCreateTicketClientIdentityInvalid": {
      "id": 2020,
      "name": "MatchmakingCreateTicketClientIdentityInvalid"
    },
    "MatchmakingGetTicketPlayerMismatch": {
      "id": 2021,
      "name": "MatchmakingGetTicketPlayerMismatch"
    },
    "MatchmakingJoinTicketServerIdentityInvalid": {
      "id": 2022,
      "name": "MatchmakingJoinTicketServerIdentityInvalid"
    },
    "MatchmakingJoinTicketPlayerIdentityMismatch": {
      "id": 2023,
      "name": "MatchmakingJoinTicketPlayerIdentityMismatch"
    },
    "MatchmakingCancelTicketServerIdentityInvalid": {
      "id": 2024,
      "name": "MatchmakingCancelTicketServerIdentityInvalid"
    },
    "MatchmakingCancelTicketPlayerIdentityMismatch": {
      "id": 2025,
      "name": "MatchmakingCancelTicketPlayerIdentityMismatch"
    },
    "MatchmakingGetMatchIdentityMismatch": {
      "id": 2026,
      "name": "MatchmakingGetMatchIdentityMismatch"
    },
    "MatchmakingPlayerIdentityMismatch": {
      "id": 2027,
      "name": "MatchmakingPlayerIdentityMismatch"
    },
    "MatchmakingAlreadyJoinedTicket": {
      "id": 2028,
      "name": "MatchmakingAlreadyJoinedTicket"
    },
    "MatchmakingTicketAlreadyCompleted": {
      "id": 2029,
      "name": "MatchmakingTicketAlreadyCompleted"
    },
    "MatchmakingClientTimeout": {
      "id": 2030,
      "name": "MatchmakingClientTimeout"
    },
    "MatchmakingQueueConfigInvalid": {
      "id": 2031,
      "name": "MatchmakingQueueConfigInvalid"
    },
    "MatchmakingMemberProfileInvalid": {
      "id": 2032,
      "name": "MatchmakingMemberProfileInvalid"
    },
    "NintendoSwitchDeviceIdNotLinked": {
      "id": 2034,
      "name": "NintendoSwitchDeviceIdNotLinked"
    },
    "MatchmakingNotEnabled": {
      "id": 2035,
      "name": "MatchmakingNotEnabled"
    },
    "MatchmakingGetStatisticsIdentityInvalid": {
      "id": 2036,
      "name": "MatchmakingGetStatisticsIdentityInvalid"
    },
    "MatchmakingBucketOwnerNotFound": {
      "id": 2037,
      "name": "MatchmakingBucketOwnerNotFound"
    },
    "MatchmakingCancelAllTicketsUnauthorized": {
      "id": 2041,
      "name": "MatchmakingCancelAllTicketsUnauthorized"
    },
    "MatchmakingListTicketsUnauthorized": {
      "id": 2042,
      "name": "MatchmakingListTicketsUnauthorized"
    },
    "MatchmakingPlayerAttributesTooLarge": {
      "id": 2043,
      "name": "MatchmakingPlayerAttributesTooLarge"
    },
    "MatchmakingNumberOfPlayersInTicketTooLarge": {
      "id": 2044,
      "name": "MatchmakingNumberOfPlayersInTicketTooLarge"
    },
    "MatchmakingMatchTotalAttributeIsNegative": {
      "id": 2045,
      "name": "MatchmakingMatchTotalAttributeIsNegative"
    },
    "MatchmakingAttributeTypeInvalid": {
      "id": 2046,
      "name": "MatchmakingAttributeTypeInvalid"
    },
    "MatchmakingMatchTotalAttributeTooLarge": {
      "id": 2047,
      "name": "MatchmakingMatchTotalAttributeTooLarge"
    },
    "MatchmakingMatchTotalAttributeSumTooLarge": {
      "id": 2048,
      "name": "MatchmakingMatchTotalAttributeSumTooLarge"
    },
    "MatchmakingTicketUnmatchable": {
      "id": 2049,
      "name": "MatchmakingTicketUnmatchable"
    },
    "MatchmakingCommonRegionMissing": {
      "id": 2050,
      "name": "MatchmakingCommonRegionMissing"
    },
    "MatchmakingLatencyMeasurementMissing": {
      "id": 2051,
      "name": "MatchmakingLatencyMeasurementMissing"
    },
    "MatchmakingStatisticsNotFound": {
      "id": 2052,
      "name": "MatchmakingStatisticsNotFound"
    },
    "MatchmakingPlayerHasNotJoinedTicket": {
      "id": 2053,
      "name": "MatchmakingPlayerHasNotJoinedTicket"
    },
    "MatchmakingRateLimitExceeded": {
      "id": 2054,
      "name": "MatchmakingRateLimitExceeded"
    },
    "TitleConfigNotFound": {
      "id": 3001,
      "name": "TitleConfigNotFound"
    },
    "TitleConfigUpdateConflict": {
      "id": 3002,
      "name": "TitleConfigUpdateConflict"
    },
    "TitleConfigSerializationError": {
      "id": 3003,
      "name": "TitleConfigSerializationError"
    },
    "CatalogEntityInvalid": {
      "id": 4001,
      "name": "CatalogEntityInvalid"
    },
    "CatalogTitleIdMissing": {
      "id": 4002,
      "name": "CatalogTitleIdMissing"
    },
    "CatalogPlayerIdMissing": {
      "id": 4003,
      "name": "CatalogPlayerIdMissing"
    },
    "CatalogClientIdentityInvalid": {
      "id": 4004,
      "name": "CatalogClientIdentityInvalid"
    },
    "CatalogOneOrMoreFilesInvalid": {
      "id": 4005,
      "name": "CatalogOneOrMoreFilesInvalid"
    },
    "CatalogItemMetadataInvalid": {
      "id": 4006,
      "name": "CatalogItemMetadataInvalid"
    },
    "CatalogItemIdInvalid": {
      "id": 4007,
      "name": "CatalogItemIdInvalid"
    },
    "CatalogSearchParameterInvalid": {
      "id": 4008,
      "name": "CatalogSearchParameterInvalid"
    },
    "CatalogFeatureDisabled": {
      "id": 4009,
      "name": "CatalogFeatureDisabled"
    },
    "CatalogConfigMissing": {
      "id": 4100,
      "name": "CatalogConfigMissing"
    },
    "CatalogConfigTooManyContentTypes": {
      "id": 4101,
      "name": "CatalogConfigTooManyContentTypes"
    },
    "CatalogConfigContentTypeTooLong": {
      "id": 4102,
      "name": "CatalogConfigContentTypeTooLong"
    },
    "CatalogConfigTooManyTags": {
      "id": 4103,
      "name": "CatalogConfigTooManyTags"
    },
    "CatalogConfigTagTooLong": {
      "id": 4104,
      "name": "CatalogConfigTagTooLong"
    }
  },
  "errorList": [
    "Success",
    "UnkownError",
    "InvalidParams",
    "AccountNotFound",
    "AccountBanned",
    "InvalidUsernameOrPassword",
    "InvalidTitleId",
    "InvalidEmailAddress",
    "EmailAddressNotAvailable",
    "InvalidUsername",
    "InvalidPassword",
    "UsernameNotAvailable",
    "InvalidSteamTicket",
    "AccountAlreadyLinked",
    "LinkedAccountAlreadyClaimed",
    "InvalidFacebookToken",
    "AccountNotLinked",
    "FailedByPaymentProvider",
    "CouponCodeNotFound",
    "InvalidContainerItem",
    "ContainerNotOwned",
    "KeyNotOwned",
    "InvalidItemIdInTable",
    "InvalidReceipt",
    "ReceiptAlreadyUsed",
    "ReceiptCancelled",
    "GameNotFound",
    "GameModeNotFound",
    "InvalidGoogleToken",
    "UserIsNotPartOfDeveloper",
    "InvalidTitleForDeveloper",
    "TitleNameConflicts",
    "UserisNotValid",
    "ValueAlreadyExists",
    "BuildNotFound",
    "PlayerNotInGame",
    "InvalidTicket",
    "InvalidDeveloper",
    "InvalidOrderInfo",
    "RegistrationIncomplete",
    "InvalidPlatform",
    "UnknownError",
    "SteamApplicationNotOwned",
    "WrongSteamAccount",
    "TitleNotActivated",
    "RegistrationSessionNotFound",
    "NoSuchMod",
    "FileNotFound",
    "DuplicateEmail",
    "ItemNotFound",
    "ItemNotOwned",
    "ItemNotRecycleable",
    "ItemNotAffordable",
    "InvalidVirtualCurrency",
    "WrongVirtualCurrency",
    "WrongPrice",
    "NonPositiveValue",
    "InvalidRegion",
    "RegionAtCapacity",
    "ServerFailedToStart",
    "NameNotAvailable",
    "InsufficientFunds",
    "InvalidDeviceID",
    "InvalidPushNotificationToken",
    "NoRemainingUses",
    "InvalidPaymentProvider",
    "PurchaseInitializationFailure",
    "DuplicateUsername",
    "InvalidBuyerInfo",
    "NoGameModeParamsSet",
    "BodyTooLarge",
    "ReservedWordInBody",
    "InvalidTypeInBody",
    "InvalidRequest",
    "ReservedEventName",
    "InvalidUserStatistics",
    "NotAuthenticated",
    "StreamAlreadyExists",
    "ErrorCreatingStream",
    "StreamNotFound",
    "InvalidAccount",
    "PurchaseDoesNotExist",
    "InvalidPurchaseTransactionStatus",
    "APINotEnabledForGameClientAccess",
    "NoPushNotificationARNForTitle",
    "BuildAlreadyExists",
    "BuildPackageDoesNotExist",
    "CustomAnalyticsEventsNotEnabledForTitle",
    "InvalidSharedGroupId",
    "NotAuthorized",
    "MissingTitleGoogleProperties",
    "InvalidItemProperties",
    "InvalidPSNAuthCode",
    "InvalidItemId",
    "PushNotEnabledForAccount",
    "PushServiceError",
    "ReceiptDoesNotContainInAppItems",
    "ReceiptContainsMultipleInAppItems",
    "InvalidBundleID",
    "JavascriptException",
    "InvalidSessionTicket",
    "UnableToConnectToDatabase",
    "InternalServerError",
    "InvalidReportDate",
    "ReportNotAvailable",
    "DatabaseThroughputExceeded",
    "InvalidGameTicket",
    "ExpiredGameTicket",
    "GameTicketDoesNotMatchLobby",
    "LinkedDeviceAlreadyClaimed",
    "DeviceAlreadyLinked",
    "DeviceNotLinked",
    "PartialFailure",
    "PublisherNotSet",
    "ServiceUnavailable",
    "VersionNotFound",
    "RevisionNotFound",
    "InvalidPublisherId",
    "DownstreamServiceUnavailable",
    "APINotIncludedInTitleUsageTier",
    "DAULimitExceeded",
    "APIRequestLimitExceeded",
    "InvalidAPIEndpoint",
    "BuildNotAvailable",
    "ConcurrentEditError",
    "ContentNotFound",
    "CharacterNotFound",
    "CloudScriptNotFound",
    "ContentQuotaExceeded",
    "InvalidCharacterStatistics",
    "PhotonNotEnabledForTitle",
    "PhotonApplicationNotFound",
    "PhotonApplicationNotAssociatedWithTitle",
    "InvalidEmailOrPassword",
    "FacebookAPIError",
    "InvalidContentType",
    "KeyLengthExceeded",
    "DataLengthExceeded",
    "TooManyKeys",
    "FreeTierCannotHaveVirtualCurrency",
    "MissingAmazonSharedKey",
    "AmazonValidationError",
    "InvalidPSNIssuerId",
    "PSNInaccessible",
    "ExpiredAuthToken",
    "FailedToGetEntitlements",
    "FailedToConsumeEntitlement",
    "TradeAcceptingUserNotAllowed",
    "TradeInventoryItemIsAssignedToCharacter",
    "TradeInventoryItemIsBundle",
    "TradeStatusNotValidForCancelling",
    "TradeStatusNotValidForAccepting",
    "TradeDoesNotExist",
    "TradeCancelled",
    "TradeAlreadyFilled",
    "TradeWaitForStatusTimeout",
    "TradeInventoryItemExpired",
    "TradeMissingOfferedAndAcceptedItems",
    "TradeAcceptedItemIsBundle",
    "TradeAcceptedItemIsStackable",
    "TradeInventoryItemInvalidStatus",
    "TradeAcceptedCatalogItemInvalid",
    "TradeAllowedUsersInvalid",
    "TradeInventoryItemDoesNotExist",
    "TradeInventoryItemIsConsumed",
    "TradeInventoryItemIsStackable",
    "TradeAcceptedItemsMismatch",
    "InvalidKongregateToken",
    "FeatureNotConfiguredForTitle",
    "NoMatchingCatalogItemForReceipt",
    "InvalidCurrencyCode",
    "NoRealMoneyPriceForCatalogItem",
    "TradeInventoryItemIsNotTradable",
    "TradeAcceptedCatalogItemIsNotTradable",
    "UsersAlreadyFriends",
    "LinkedIdentifierAlreadyClaimed",
    "CustomIdNotLinked",
    "TotalDataSizeExceeded",
    "DeleteKeyConflict",
    "InvalidXboxLiveToken",
    "ExpiredXboxLiveToken",
    "ResettableStatisticVersionRequired",
    "NotAuthorizedByTitle",
    "NoPartnerEnabled",
    "InvalidPartnerResponse",
    "APINotEnabledForGameServerAccess",
    "StatisticNotFound",
    "StatisticNameConflict",
    "StatisticVersionClosedForWrites",
    "StatisticVersionInvalid",
    "APIClientRequestRateLimitExceeded",
    "InvalidJSONContent",
    "InvalidDropTable",
    "StatisticVersionAlreadyIncrementedForScheduledInterval",
    "StatisticCountLimitExceeded",
    "StatisticVersionIncrementRateExceeded",
    "ContainerKeyInvalid",
    "CloudScriptExecutionTimeLimitExceeded",
    "NoWritePermissionsForEvent",
    "CloudScriptFunctionArgumentSizeExceeded",
    "CloudScriptAPIRequestCountExceeded",
    "CloudScriptAPIRequestError",
    "CloudScriptHTTPRequestError",
    "InsufficientGuildRole",
    "GuildNotFound",
    "OverLimit",
    "EventNotFound",
    "InvalidEventField",
    "InvalidEventName",
    "CatalogNotConfigured",
    "OperationNotSupportedForPlatform",
    "SegmentNotFound",
    "StoreNotFound",
    "InvalidStatisticName",
    "TitleNotQualifiedForLimit",
    "InvalidServiceLimitLevel",
    "ServiceLimitLevelInTransition",
    "CouponAlreadyRedeemed",
    "GameServerBuildSizeLimitExceeded",
    "GameServerBuildCountLimitExceeded",
    "VirtualCurrencyCountLimitExceeded",
    "VirtualCurrencyCodeExists",
    "TitleNewsItemCountLimitExceeded",
    "InvalidTwitchToken",
    "TwitchResponseError",
    "ProfaneDisplayName",
    "UserAlreadyAdded",
    "InvalidVirtualCurrencyCode",
    "VirtualCurrencyCannotBeDeleted",
    "IdentifierAlreadyClaimed",
    "IdentifierNotLinked",
    "InvalidContinuationToken",
    "ExpiredContinuationToken",
    "InvalidSegment",
    "InvalidSessionId",
    "SessionLogNotFound",
    "InvalidSearchTerm",
    "TwoFactorAuthenticationTokenRequired",
    "GameServerHostCountLimitExceeded",
    "PlayerTagCountLimitExceeded",
    "RequestAlreadyRunning",
    "ActionGroupNotFound",
    "MaximumSegmentBulkActionJobsRunning",
    "NoActionsOnPlayersInSegmentJob",
    "DuplicateStatisticName",
    "ScheduledTaskNameConflict",
    "ScheduledTaskCreateConflict",
    "InvalidScheduledTaskName",
    "InvalidTaskSchedule",
    "SteamNotEnabledForTitle",
    "LimitNotAnUpgradeOption",
    "NoSecretKeyEnabledForCloudScript",
    "TaskNotFound",
    "TaskInstanceNotFound",
    "InvalidIdentityProviderId",
    "MisconfiguredIdentityProvider",
    "InvalidScheduledTaskType",
    "BillingInformationRequired",
    "LimitedEditionItemUnavailable",
    "InvalidAdPlacementAndReward",
    "AllAdPlacementViewsAlreadyConsumed",
    "GoogleOAuthNotConfiguredForTitle",
    "GoogleOAuthError",
    "UserNotFriend",
    "InvalidSignature",
    "InvalidPublicKey",
    "GoogleOAuthNoIdTokenIncludedInResponse",
    "StatisticUpdateInProgress",
    "LeaderboardVersionNotAvailable",
    "StatisticAlreadyHasPrizeTable",
    "PrizeTableHasOverlappingRanks",
    "PrizeTableHasMissingRanks",
    "PrizeTableRankStartsAtZero",
    "InvalidStatistic",
    "ExpressionParseFailure",
    "ExpressionInvokeFailure",
    "ExpressionTooLong",
    "DataUpdateRateExceeded",
    "RestrictedEmailDomain",
    "EncryptionKeyDisabled",
    "EncryptionKeyMissing",
    "EncryptionKeyBroken",
    "NoSharedSecretKeyConfigured",
    "SecretKeyNotFound",
    "PlayerSecretAlreadyConfigured",
    "APIRequestsDisabledForTitle",
    "InvalidSharedSecretKey",
    "PrizeTableHasNoRanks",
    "ProfileDoesNotExist",
    "ContentS3OriginBucketNotConfigured",
    "InvalidEnvironmentForReceipt",
    "EncryptedRequestNotAllowed",
    "SignedRequestNotAllowed",
    "RequestViewConstraintParamsNotAllowed",
    "BadPartnerConfiguration",
    "XboxBPCertificateFailure",
    "XboxXASSExchangeFailure",
    "InvalidEntityId",
    "StatisticValueAggregationOverflow",
    "EmailMessageFromAddressIsMissing",
    "EmailMessageToAddressIsMissing",
    "SmtpServerAuthenticationError",
    "SmtpServerLimitExceeded",
    "SmtpServerInsufficientStorage",
    "SmtpServerCommunicationError",
    "SmtpServerGeneralFailure",
    "EmailClientTimeout",
    "EmailClientCanceledTask",
    "EmailTemplateMissing",
    "InvalidHostForTitleId",
    "EmailConfirmationTokenDoesNotExist",
    "EmailConfirmationTokenExpired",
    "AccountDeleted",
    "PlayerSecretNotConfigured",
    "InvalidSignatureTime",
    "NoContactEmailAddressFound",
    "InvalidAuthToken",
    "AuthTokenDoesNotExist",
    "AuthTokenExpired",
    "AuthTokenAlreadyUsedToResetPassword",
    "MembershipNameTooLong",
    "MembershipNotFound",
    "GoogleServiceAccountInvalid",
    "GoogleServiceAccountParseFailure",
    "EntityTokenMissing",
    "EntityTokenInvalid",
    "EntityTokenExpired",
    "EntityTokenRevoked",
    "InvalidProductForSubscription",
    "XboxInaccessible",
    "SubscriptionAlreadyTaken",
    "SmtpAddonNotEnabled",
    "APIConcurrentRequestLimitExceeded",
    "XboxRejectedXSTSExchangeRequest",
    "VariableNotDefined",
    "TemplateVersionNotDefined",
    "FileTooLarge",
    "TitleDeleted",
    "TitleContainsUserAccounts",
    "TitleDeletionPlayerCleanupFailure",
    "EntityFileOperationPending",
    "NoEntityFileOperationPending",
    "EntityProfileVersionMismatch",
    "TemplateVersionTooOld",
    "MembershipDefinitionInUse",
    "PaymentPageNotConfigured",
    "FailedLoginAttemptRateLimitExceeded",
    "EntityBlockedByGroup",
    "RoleDoesNotExist",
    "EntityIsAlreadyMember",
    "DuplicateRoleId",
    "GroupInvitationNotFound",
    "GroupApplicationNotFound",
    "OutstandingInvitationAcceptedInstead",
    "OutstandingApplicationAcceptedInstead",
    "RoleIsGroupDefaultMember",
    "RoleIsGroupAdmin",
    "RoleNameNotAvailable",
    "GroupNameNotAvailable",
    "EmailReportAlreadySent",
    "EmailReportRecipientBlacklisted",
    "EventNamespaceNotAllowed",
    "EventEntityNotAllowed",
    "InvalidEntityType",
    "NullTokenResultFromAad",
    "InvalidTokenResultFromAad",
    "NoValidCertificateForAad",
    "InvalidCertificateForAad",
    "DuplicateDropTableId",
    "MultiplayerServerError",
    "MultiplayerServerTooManyRequests",
    "MultiplayerServerNoContent",
    "MultiplayerServerBadRequest",
    "MultiplayerServerUnauthorized",
    "MultiplayerServerForbidden",
    "MultiplayerServerNotFound",
    "MultiplayerServerConflict",
    "MultiplayerServerInternalServerError",
    "MultiplayerServerUnavailable",
    "ExplicitContentDetected",
    "PIIContentDetected",
    "InvalidScheduledTaskParameter",
    "PerEntityEventRateLimitExceeded",
    "TitleDefaultLanguageNotSet",
    "EmailTemplateMissingDefaultVersion",
    "FacebookInstantGamesIdNotLinked",
    "InvalidFacebookInstantGamesSignature",
    "FacebookInstantGamesAuthNotConfiguredForTitle",
    "EntityProfileConstraintValidationFailed",
    "TelemetryIngestionKeyPending",
    "TelemetryIngestionKeyNotFound",
    "StatisticTagRequired",
    "StatisticTagInvalid",
    "DataIntegrityError",
    "VirtualCurrencyCannotBeSetToOlderVersion",
    "VirtualCurrencyMustBeWithinIntegerRange",
    "EmailTemplateInvalidSyntax",
    "EmailTemplateMissingCallback",
    "PushNotificationTemplateInvalidPayload",
    "InvalidLocalizedPushNotificationLanguage",
    "MissingLocalizedPushNotificationMessage",
    "PushNotificationTemplateMissingPlatformPayload",
    "PushNotificationTemplatePayloadContainsInvalidJson",
    "PushNotificationTemplateContainsInvalidIosPayload",
    "PushNotificationTemplateContainsInvalidAndroidPayload",
    "PushNotificationTemplateIosPayloadMissingNotificationBody",
    "PushNotificationTemplateAndroidPayloadMissingNotificationBody",
    "PushNotificationTemplateNotFound",
    "PushNotificationTemplateMissingDefaultVersion",
    "PushNotificationTemplateInvalidSyntax",
    "PushNotificationTemplateNoCustomPayloadForV1",
    "NoLeaderboardForStatistic",
    "TitleNewsMissingDefaultLanguage",
    "TitleNewsNotFound",
    "TitleNewsDuplicateLanguage",
    "TitleNewsMissingTitleOrBody",
    "TitleNewsInvalidLanguage",
    "EmailRecipientBlacklisted",
    "InvalidGameCenterAuthRequest",
    "GameCenterAuthenticationFailed",
    "CannotEnablePartiesForTitle",
    "PartyError",
    "PartyRequests",
    "PartyNoContent",
    "PartyBadRequest",
    "PartyUnauthorized",
    "PartyForbidden",
    "PartyNotFound",
    "PartyConflict",
    "PartyInternalServerError",
    "PartyUnavailable",
    "PartyTooManyRequests",
    "PushNotificationTemplateMissingName",
    "CannotEnableMultiplayerServersForTitle",
    "WriteAttemptedDuringExport",
    "MatchmakingEntityInvalid",
    "MatchmakingPlayerAttributesInvalid",
    "MatchmakingCreateTicketRequestMissing",
    "MatchmakingCreateTicketCreatorMissing",
    "MatchmakingCreateTicketCreatorIdMissing",
    "MatchmakingCreateTicketMemberListMissing",
    "MatchmakingCreateTicketGiveUpAfterInvalid",
    "MatchmakingTicketIdMissing",
    "MatchmakingMatchIdMissing",
    "MatchmakingMatchIdIdMissing",
    "MatchmakingQueueNameMissing",
    "MatchmakingTitleIdMissing",
    "MatchmakingTicketIdIdMissing",
    "MatchmakingPlayerIdMissing",
    "MatchmakingJoinTicketPlayerMissing",
    "MatchmakingQueueConfigNotFound",
    "MatchmakingMatchNotFound",
    "MatchmakingTicketNotFound",
    "MatchmakingCreateTicketServerIdentityInvalid",
    "MatchmakingCreateTicketClientIdentityInvalid",
    "MatchmakingGetTicketPlayerMismatch",
    "MatchmakingJoinTicketServerIdentityInvalid",
    "MatchmakingJoinTicketPlayerIdentityMismatch",
    "MatchmakingCancelTicketServerIdentityInvalid",
    "MatchmakingCancelTicketPlayerIdentityMismatch",
    "MatchmakingGetMatchIdentityMismatch",
    "MatchmakingPlayerIdentityMismatch",
    "MatchmakingAlreadyJoinedTicket",
    "MatchmakingTicketAlreadyCompleted",
    "MatchmakingClientTimeout",
    "MatchmakingQueueConfigInvalid",
    "MatchmakingMemberProfileInvalid",
    "NintendoSwitchDeviceIdNotLinked",
    "MatchmakingNotEnabled",
    "MatchmakingGetStatisticsIdentityInvalid",
    "MatchmakingBucketOwnerNotFound",
    "MatchmakingCancelAllTicketsUnauthorized",
    "MatchmakingListTicketsUnauthorized",
    "MatchmakingPlayerAttributesTooLarge",
    "MatchmakingNumberOfPlayersInTicketTooLarge",
    "MatchmakingMatchTotalAttributeIsNegative",
    "MatchmakingAttributeTypeInvalid",
    "MatchmakingMatchTotalAttributeTooLarge",
    "MatchmakingMatchTotalAttributeSumTooLarge",
    "MatchmakingTicketUnmatchable",
    "MatchmakingCommonRegionMissing",
    "MatchmakingLatencyMeasurementMissing",
    "MatchmakingStatisticsNotFound",
    "MatchmakingPlayerHasNotJoinedTicket",
    "MatchmakingRateLimitExceeded",
    "TitleConfigNotFound",
    "TitleConfigUpdateConflict",
    "TitleConfigSerializationError",
    "CatalogEntityInvalid",
    "CatalogTitleIdMissing",
    "CatalogPlayerIdMissing",
    "CatalogClientIdentityInvalid",
    "CatalogOneOrMoreFilesInvalid",
    "CatalogItemMetadataInvalid",
    "CatalogItemIdInvalid",
    "CatalogSearchParameterInvalid",
    "CatalogFeatureDisabled",
    "CatalogConfigMissing",
    "CatalogConfigTooManyContentTypes",
    "CatalogConfigContentTypeTooLong",
    "CatalogConfigTooManyTags",
    "CatalogConfigTagTooLong"
  ]
}